<UserControl x:Class="Yarukizero.Net.MakiMoki.Wpf.Controls.FutabaCatalogViewer"
             x:Name="_this"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ri="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
             xmlns:local="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Controls"
             xmlns:converter="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Converters"
             xmlns:behavior="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Behaviors"
             xmlns:model="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Model"
             xmlns:data="clr-namespace:Yarukizero.Net.MakiMoki.Data;assembly=MakiMoki.Core"
             mc:Ignorable="d" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Xaml/FlatButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converter:CatalogTextConverter x:Key="CatalogTextConverter"/>
            <converter:FutabaResItemConverter x:Key="FutabaResItemConverter"/>
            <converter:FutabaCatalogSortCheckedConverter x:Key="FutabaCatalogSortCheckedConverter"/>
            <converter:FutabaCatalogSortParamConverter x:Key="FutabaCatalogSortParamConverter"/>
            <converter:FutabaCatalogVisibleConverter x:Key="FutabaCatalogVisibleConverter"/>
            <converter:FutabaCatalogStyleConverter x:Key="FutabaCatalogStyleConverter"/>
            <converter:FutabaThreadResVisibleConverter x:Key="FutabaThreadResVisibleConverter"/>
            <converter:FutabaCatalogItemOpenedColorConverter x:Key="FutabaCatalogItemOpenedColorConverter" />
            <converter:FutabaCatalogItemFilterConverter x:Key="FutabaCatalogItemFilterConverter" />
            <converter:FutabaNewResCountConverter x:Key="FutabaNewResCountConverter"/>
            <converter:FutabaNewResVisibilityConverter x:Key="FutabaNewResVisibilityConverter"/>
            <converter:FutabaOldResVisibilityConverter x:Key="FutabaOldResVisibilityConverter"/>
            <converter:FutabaIdResVisibilityConverter x:Key="FutabaIdResVisibilityConverter"/>
            <converter:FutabaMovieResVisibilityConverter x:Key="FutabaMovieResVisibilityConverter"/>
            <converter:FutabaIsolateResVisibilityConverter x:Key="FutabaIsolateResVisibilityConverter" />
            <converter:FutabaIsolateResCountVisibilityConverter x:Key="FutabaIsolateResCountVisibilityConverter" />
            <converter:FutabaResItemVisibleConverter x:Key="FutabaResItemVisibleConverter"/>
            <converter:FutabaResItemIdTextConverter x:Key="FutabaResItemIdTextConverter" />
            <converter:FutabaResItemNowConverter x:Key="FutabaResItemNowConverter"/>
            <converter:FutabaResItemFooterVisibleConverter x:Key="FutabaResItemFooterVisibleConverter" />
            <converter:FutabaResItemNextButtonEnabledConverter x:Key="FutabaResItemNextButtonEnabledConverter" />
            <converter:FutabaResItemOldColorConverter x:Key="FutabaResItemOldColorConverter" />
            <converter:FutabaResItemResCountColorConverter x:Key="FutabaResItemResCountColorConverter" />
            <converter:PostViewOpacityConverter x:Key="PostViewOpacityConverter" />
            <converter:PostViewMinWidthConverter x:Key="PostViewMinWidthConverter" />
            <converter:PostViewMaxWidthConverter x:Key="PostViewMaxWidthConverter" />

            <ToolTip x:Key="CatalogItemToolTip">
                <Grid
                    MaxWidth="480"
                    Margin="16 4 16 4" 
                    Background="Transparent"
                    IsHitTestVisible="False"
                    TextBlock.FontSize="12"
                    TextBlock.FontFamily="{DynamicResource CatalogTextFont}" >
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ViewerForegroundColor}" />
                    </TextBlock.Foreground>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Viewbox
                            Grid.Column="0"
                            MaxWidth="128"
                            MaxHeight="128"
                            HorizontalAlignment="Left"
                            StretchDirection="DownOnly"
                            Visibility="{Binding ResImageVisibility.Value, Mode=OneWay}">
                            <Image 
                                Source="{Binding ThumbSource.Value}"
                                RenderOptions.EdgeMode="Aliased"
                                RenderOptions.BitmapScalingMode="Fant">
                                <Image.CacheMode>
                                    <BitmapCache RenderAtScale="1" />
                                </Image.CacheMode>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <ri:EventToReactiveCommand Command="{Binding ThumbLoadCommand, Mode=OneWay}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Image>
                        </Viewbox>

                        <local:FutabaCommentBlock
                            Grid.Column="1"
                            Text="{Binding CommentHtml.Value, Mode=OneWay}"
                            TextWrapping="Wrap"
                            Margin="4 4 0 4">
                            <local:FutabaCommentBlock.Inline>
                                <Binding Mode="OneWay" />
                            </local:FutabaCommentBlock.Inline>
                        </local:FutabaCommentBlock>
                    </Grid>
                    <TextBlock
                        Grid.Row="1"
                        Text="{Binding Raw.Value.CounterCurrent, Mode=OneWay, StringFormat='\{0\}レス'}"
                        HorizontalAlignment="Right"
                        Margin="2"/>
                </Grid>
            </ToolTip>

            <Style x:Key="CatalogWrapBox" TargetType="ListBox">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <vwp:VirtualizingWrapPanel IsItemsHost="True"  HorizontalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid>
                                <Button
                                    x:Name="button"
                                    Margin="4" 
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    ToolTipService.InitialShowDelay="1000"
                                    ToolTipService.BetweenShowDelay="0"
                                    ToolTipService.ShowDuration="{x:Static sys:Int32.MaxValue}"
                                    ToolTip="{StaticResource CatalogItemToolTip}"
                                    Tag="{Binding DataContext,Mode=OneWay, ElementName=_this}">
                                    <Button.ContextMenu>
                                        <ContextMenu
                                            DataContext="{Binding PlacementTarget.DataContext,Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                            Tag="{Binding PlacementTarget.Tag,Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="del" Click="OnCatalogMenuItemDelClickCommand" />
                                            <Separator />
                                            <MenuItem
                                                Header="NG画像登録"
                                                Visibility="{Binding IsVisibleMenuItemNgImage.Value, Mode=OneWay}"
                                                Command="{Binding Tag.CatalogMenuItemNgImageCommand,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                CommandParameter="{Binding DataContext,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                                            <MenuItem
                                                Header="{Binding MenuItemTextHidden.Value, Mode=OneWay}"
                                                Command="{Binding Tag.CatalogMenuItemThreadHiddenCommand,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                CommandParameter="{Binding DataContext,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                    <Button.Background>
                                        <SolidColorBrush>
                                            <SolidColorBrush.Color>
                                                <MultiBinding  Converter="{StaticResource FutabaCatalogItemOpenedColorConverter}">
                                                    <Binding Mode="OneWay" />
                                                    <Binding Path="Contents.Futaba.Value.OpenedThreads.Value" Mode="OneWay" ElementName="_this" />
                                                    <Binding Path="DataContext" ElementName="CatalogItemBackgroundColorGetter" Mode="OneWay" />
                                                    <Binding Path="DataContext" ElementName="CatalogItemOpendBackgroundColorGetter" Mode="OneWay" />
                                                </MultiBinding>
                                            </SolidColorBrush.Color>
                                        </SolidColorBrush>
                                    </Button.Background>
                                    <Grid x:Name="CatalogItem">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ViewerForegroundColor}" />
                                        </TextBlock.Foreground>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <!-- スレ画-->
                                        <Viewbox
                                            Grid.Row="0"
                                            Width="{DynamicResource CatalogImageSize}" Height="{DynamicResource CatalogImageSize}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Stretch="Uniform"
                                            >
                                            <Image
                                                Source="{Binding ThumbSource.Value, Mode=OneWay}"
                                                RenderOptions.EdgeMode="Aliased"
                                                RenderOptions.BitmapScalingMode="Fant">
                                                <Image.CacheMode>
                                                    <BitmapCache RenderAtScale="1" />
                                                </Image.CacheMode>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Loaded">
                                                        <ri:EventToReactiveCommand Command="{Binding ThumbLoadCommand, Mode=OneWay}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Image>
                                        </Viewbox>
                                        <!-- 新着レス数-->
                                        <Viewbox
                                            Grid.Row="0"
                                            Margin="2"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Visibility="{Binding Raw.Value, Converter={StaticResource FutabaNewResVisibilityConverter}, Mode=OneWay}"                                        
                                            Width="{DynamicResource CatalogBadgeSize}"
                                            Height="{DynamicResource CatalogBadgeSize}"
                                            >
                                            <Grid
                                                Width="16"
                                                Height="16"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                >
                                                <Ellipse Width="16" Height="16">
                                                    <Ellipse.Fill>
                                                        <SolidColorBrush Color="{DynamicResource CatalogBadgeCountBackgroundColor}" />
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <TextBlock
                                                    Text="{Binding Raw.Value, Converter={StaticResource FutabaNewResCountConverter}, Mode=OneWay}"
                                                    FontFamily="{DynamicResource CatalogBadgeFont}"
                                                    FontSize="10"
                                                    FontWeight="Bold"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Padding="0 0 0 1">
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{DynamicResource CatalogBadgeCountForegroundColor}" />
                                                    </TextBlock.Foreground>
                                                </TextBlock>
                                            </Grid>
                                        </Viewbox>
                                        <!-- 隔離 -->
                                        <Viewbox
                                            Grid.Row="0"
                                            Margin="2"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Width="{DynamicResource CatalogBadgeSize}"
                                            Height="{DynamicResource CatalogBadgeSize}"
                                            >
                                            <Viewbox.Visibility>
                                                <MultiBinding Converter="{StaticResource FutabaIsolateResVisibilityConverter}">
                                                    <Binding Path="Raw.Value" Mode="OneWay" />
                                                    <Binding Path="Parent.Value.UpdateToken.Value" Mode="OneWay" />
                                                </MultiBinding>
                                            </Viewbox.Visibility>
                                            <Grid
                                                Width="16"
                                                Height="16"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                >
                                                <Ellipse Width="16" Height="16">
                                                    <Ellipse.Fill>
                                                        <SolidColorBrush Color="{DynamicResource CatalogBadgeIsolateBackgroundColor}" />
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <TextBlock
                                                    Text="隔"
                                                    FontFamily="{DynamicResource CatalogBadgeFont}"
                                                    FontSize="10"
                                                    FontWeight="Bold"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Padding="0 0 0 1">
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{DynamicResource CatalogBadgeIsolateForegroundColor}" />
                                                    </TextBlock.Foreground>
                                                </TextBlock>
                                            </Grid>
                                        </Viewbox>

                                        <!-- 落、ID -->
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Viewbox
                                                Margin="2 2 0 2"
                                                Visibility="{Binding Raw.Value, Converter={StaticResource FutabaOldResVisibilityConverter}, Mode=OneWay}"                                        
                                                Width="{DynamicResource CatalogBadgeSize}"
                                                Height="{DynamicResource CatalogBadgeSize}"
                                                >
                                                <Grid
                                                    Width="16" Height="16"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    >
                                                    <Ellipse Width="16" Height="16">
                                                        <Ellipse.Fill>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeOldBackgroundColor}" />
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                    <TextBlock
                                                        Text="落"
                                                        FontFamily="{DynamicResource CatalogBadgeFont}"
                                                        FontSize="10"
                                                        FontWeight="Bold"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Padding="0 0 0 1">
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeOldForegroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                </Grid>
                                            </Viewbox>

                                            <!-- カタログJSONのidは常に空なのでできない
                                            <Viewbox
                                                Margin="2 2 0 2"
                                                Visibility="{Binding Raw.Value, Converter={StaticResource FutabaIdResVisibilityConverter}, Mode=OneWay}"                                        
                                                Width="{DynamicResource CatalogBadgeSize}"
                                                Height="{DynamicResource CatalogBadgeSize}"
                                                >
                                                <Grid
                                                    Width="16" Height="16"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    >
                                                    <Ellipse Width="16" Height="16">
                                                        <Ellipse.Fill>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeIdBackgroundColor}" />
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                            
                                                    <TextBlock
                                                        Text="ID"
                                                        FontFamily="{DynamicResource CatalogBadgeFont}"
                                                        FontSize="10"
                                                        FontWeight="Bold"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Padding="0 0 0 1">
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeIdForegroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                </Grid>
                                            </Viewbox>
                                            -->
                                        </StackPanel>

                                        <!-- 動画マーカー -->
                                        <Viewbox
                                            Margin="2"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom"
                                            Width="{DynamicResource CatalogBadgeSize}"
                                            Height="{DynamicResource CatalogBadgeSize}"
                                            >
                                            <Viewbox.Visibility>
                                                <MultiBinding Converter="{StaticResource FutabaMovieResVisibilityConverter}">
                                                    <Binding Path="Raw.Value" Mode="OneWay" />
                                                    <Binding Path="Parent.Value.UpdateToken.Value" Mode="OneWay" />
                                                </MultiBinding>
                                            </Viewbox.Visibility>
                                            <Grid
                                                Width="16" Height="16"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                >
                                                <Ellipse Width="16" Height="16">
                                                    <Ellipse.Fill>
                                                        <SolidColorBrush Color="{DynamicResource CatalogBadgeMovieBackgroundColor}" />
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <TextBlock
                                                    Text="▶"
                                                    FontFamily="{DynamicResource CatalogBadgeFont}"
                                                    FontSize="10"
                                                    FontWeight="Bold"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Padding="0 0 0 1">
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{DynamicResource CatalogBadgeMovieForegroundColor}" />
                                                    </TextBlock.Foreground>
                                                </TextBlock>
                                            </Grid>
                                        </Viewbox>

                                        <!-- レス-->
                                        <Grid
                                            Grid.Column="0"
                                            Grid.Row="1"
                                            VerticalAlignment="Bottom"
                                            Width="{Binding ActualWidth, ElementName=CatalogItem, Mode=OneWay}"
                                            Height="{DynamicResource CatalogTextSize}"
                                            TextBlock.FontFamily="{DynamicResource CatalogTextFont}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                Grid.Column="0"
                                                Text="{Binding Raw.Value.ResItem.Res, Converter={StaticResource CatalogTextConverter}, Mode=OneWay}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Bottom"/>
                                            <TextBlock
                                                Grid.Column="2"
                                                Text="{Binding Raw.Value.CounterCurrent, Mode=OneWay}"
                                                Visibility="{Binding Raw.Value, Converter={StaticResource FutabaIsolateResCountVisibilityConverter}, Mode=OneWay}"                                        
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"/>
                                        </Grid>
                                    </Grid>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogItemMouseDownCommand, ElementName=_this}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogItemClickCommand, ElementName=_this}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="CatalogListBox" TargetType="ListBox">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel
                            Orientation="Vertical"
                            IsItemsHost="True" 
                            HorizontalAlignment="Stretch"
                            />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid>
                                <Button
                                    x:Name="button"
                                    Margin="4" 
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    ToolTipService.InitialShowDelay="1000"
                                    ToolTipService.BetweenShowDelay="0"
                                    ToolTipService.ShowDuration="{x:Static sys:Int32.MaxValue}"
                                    ToolTip="{StaticResource CatalogItemToolTip}">
                                    <Button.ContextMenu>
                                        <ContextMenu
                                            DataContext="{Binding PlacementTarget.DataContext,Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                            Tag="{Binding PlacementTarget.Tag,Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="del" Click="OnCatalogMenuItemDelClickCommand" />
                                            <Separator />
                                            <MenuItem
                                                Header="NG画像登録"
                                                Visibility="{Binding IsVisibleMenuItemNgImage.Value, Mode=OneWay}"
                                                Command="{Binding Tag.CatalogMenuItemNgImageCommand,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                CommandParameter="{Binding DataContext,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                                            <MenuItem
                                                Header="{Binding MenuItemTextHidden.Value, Mode=OneWay}"
                                                Command="{Binding Tag.CatalogMenuItemThreadHiddenCommand,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                CommandParameter="{Binding DataContext,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                    <Button.Background>
                                        <SolidColorBrush>
                                            <SolidColorBrush.Color>
                                                <MultiBinding  Converter="{StaticResource FutabaCatalogItemOpenedColorConverter}">
                                                    <Binding Mode="OneWay" />
                                                    <Binding Path="Contents.Futaba.Value.OpenedThreads.Value" Mode="OneWay" ElementName="_this" />
                                                    <Binding Path="DataContext" ElementName="CatalogItemBackgroundColorGetter" Mode="OneWay" />
                                                    <Binding Path="DataContext" ElementName="CatalogItemOpendBackgroundColorGetter" Mode="OneWay" />
                                                </MultiBinding>
                                            </SolidColorBrush.Color>
                                        </SolidColorBrush>
                                    </Button.Background>
                                    <Grid
                                        Margin="16 4 16 4" 
                                        Background="Transparent"
                                        IsHitTestVisible="False"
                                        TextBlock.FontSize="{DynamicResource ThreadTextFontSize}"
                                        TextBlock.FontFamily="{DynamicResource ThreadTextFont}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ViewerForegroundColor}" />
                                        </TextBlock.Foreground>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="52" />
                                        </Grid.RowDefinitions>

                                        <Grid Grid.Column="0" Visibility="{Binding ResImageVisibility.Value, Mode=OneWay}">
                                            <Viewbox
                                                Width="48"
                                                Height="48"
                                                HorizontalAlignment="Left"
                                                StretchDirection="DownOnly">
                                                <Image 
                                                    Source="{Binding ThumbSource.Value}"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    RenderOptions.BitmapScalingMode="Fant">
                                                    <Image.CacheMode>
                                                        <BitmapCache RenderAtScale="1" />
                                                    </Image.CacheMode>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Loaded">
                                                            <ri:EventToReactiveCommand Command="{Binding ThumbLoadCommand, Mode=OneWay}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Image>
                                            </Viewbox>

                                            <!-- 新着レス数-->
                                            <Viewbox
                                                Margin="2"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Visibility="{Binding Raw.Value, Converter={StaticResource FutabaNewResVisibilityConverter}, Mode=OneWay}"                                        
                                                Width="{DynamicResource CatalogBadgeSize}"
                                                Height="{DynamicResource CatalogBadgeSize}"
                                                >
                                                <Grid
                                                    Width="16" Height="16"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    >
                                                    <Ellipse Width="16" Height="16">
                                                        <Ellipse.Fill>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeCountBackgroundColor}" />
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                    <TextBlock
                                                    Text="{Binding Raw.Value, Converter={StaticResource FutabaNewResCountConverter}, Mode=OneWay}"
                                                    FontFamily="{DynamicResource CatalogBadgeFont}"
                                                    FontSize="10"
                                                    FontWeight="Bold"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Padding="0 0 0 1">
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeCountForegroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                </Grid>
                                            </Viewbox>
                                            <!-- 隔離 -->
                                            <Viewbox
                                                Margin="2"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Width="{DynamicResource CatalogBadgeSize}"
                                                Height="{DynamicResource CatalogBadgeSize}"
                                                >
                                                <Viewbox.Visibility>
                                                    <MultiBinding Converter="{StaticResource FutabaIsolateResVisibilityConverter}">
                                                        <Binding Path="Raw.Value" Mode="OneWay" />
                                                        <Binding Path="Parent.Value.UpdateToken.Value" Mode="OneWay" />
                                                    </MultiBinding>
                                                </Viewbox.Visibility>
                                                <Grid
                                                    Width="16"
                                                    Height="16"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    >
                                                    <Ellipse Width="16" Height="16">
                                                        <Ellipse.Fill>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeIsolateBackgroundColor}" />
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                    <TextBlock
                                                        Text="隔"
                                                        FontFamily="{DynamicResource CatalogBadgeFont}"
                                                        FontSize="10"
                                                        FontWeight="Bold"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Padding="0 0 0 1">
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush Color="{DynamicResource CatalogBadgeIsolateForegroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                </Grid>
                                            </Viewbox>
                                        </Grid>
                                        <local:FutabaCommentBlock
                                            Grid.Column="1"
                                            Text="{Binding CommentHtml.Value, Mode=OneWay}"
                                            TextTrimming="CharacterEllipsis"
                                            TextWrapping="NoWrap"
                                            MaxLines="1"
                                            VerticalAlignment="Center"
                                            Margin="4 4 0 4">
                                            <local:FutabaCommentBlock.Inline>
                                                <Binding Mode="OneWay" />
                                            </local:FutabaCommentBlock.Inline>
                                        </local:FutabaCommentBlock>
                                        <TextBlock
                                            Grid.Column="2"
                                            Text="{Binding Raw.Value.CounterCurrent, Mode=OneWay, StringFormat='\{0\}レス'}"
                                            TextBlock.FontSize="{DynamicResource ThreadTextFontSize}"
                                            TextBlock.FontFamily="{DynamicResource ThreadTextFont}"
                                            Visibility="{Binding Raw.Value, Converter={StaticResource FutabaIsolateResCountVisibilityConverter}, Mode=OneWay}"                                        
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                            Margin="2"/>
                                    </Grid>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogItemMouseDownCommand, ElementName=_this}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogItemClickCommand, ElementName=_this}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ContextMenu 
                x:Key="CatalogSortContextMenu"
                ItemsSource="{Binding CatalogSortItem.Value}"
                Placement="Bottom"
                VerticalOffset="4" HorizontalOffset="0">
                <ContextMenu.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding Name}" />
                        <Setter Property="IsChecked">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource FutabaCatalogSortCheckedConverter}">
                                    <Binding Mode="OneWay" />
                                    <Binding Path="Tag.CatalogSortItem.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType=ContextMenu}" Mode="OneWay" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Command" Value="{Binding DataContext.CatalogSortItemClickCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                        <Setter Property="CommandParameter">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource FutabaCatalogSortParamConverter}">
                                    <Binding Mode="OneWay" />
                                    <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType=ContextMenu}" Mode="OneWay" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ContextMenu.ItemContainerStyle>
            </ContextMenu>
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentsChanged">
            <ri:EventToReactiveCommand Command="{Binding ContentsChangedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <!-- DynamicResource取得用のElement -->
        <FrameworkElement 
            x:Name="CatalogItemBackgroundColorGetter"
            Visibility="Collapsed"
            DataContext="{DynamicResource CatalogItemBackgroundColor}" />
        <FrameworkElement 
            x:Name="CatalogItemOpendBackgroundColorGetter"
            Visibility="Collapsed"
            DataContext="{DynamicResource CatalogItemOpendBackgroundColor}" />
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Margin="0" BorderThickness="0 0 0 1" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                <Border.Background>
                    <SolidColorBrush Color="#ffffff" />
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource ViewerBorderColor}" />
                </Border.BorderBrush>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" MinWidth="0" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition x:Name="SearchColumn" Width="Auto" MaxWidth="320" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Style="{StaticResource ToolbarButtonHarf}" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}" Visibility="Collapsed">
                        <Button.LayoutTransform>
                            <RotateTransform x:Name="ContractRotate" Angle="180" />
                        </Button.LayoutTransform>
                        <Button.ToolTip>
                            <ToolTip Content="スレッド画面最大化" />
                        </Button.ToolTip>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ri:EventToReactiveCommand Command="{Binding FullScreenClickCommand}" />
                            </i:EventTrigger>
                            <i:DataTrigger Binding="{Binding IsFullScreenMode.Value, Mode=OneWay}" Value="True" Comparison="Equal">
                                <i:ChangePropertyAction TargetName="ContractRotate" PropertyName="Angle" Value="0" />
                            </i:DataTrigger>
                            <i:DataTrigger Binding="{Binding IsFullScreenMode.Value, Mode=OneWay}" Value="True" Comparison="NotEqual">
                                <i:ChangePropertyAction TargetName="ContractRotate" PropertyName="Angle" Value="180" />
                            </i:DataTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Column="2" Style="{StaticResource ToolbarButton}" Content="{StaticResource ButtonIconViewerUpdate}" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                        <Button.ToolTip>
                            <ToolTip Content="更新" />
                        </Button.ToolTip>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogUpdateClickCommand, ElementName=_this}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Grid x:Name="CatalogSearchGrid" Grid.Column="3" Margin="2" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="CatalogSearchTextBox"
                            Grid.Column="0"
                            Text="{Binding Contents.Futaba.Value.FilterText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=_this}"
                            FontSize="14"
                            VerticalAlignment="Center"
                            local:PlaceHolderBehavior.PlaceHolderText="検索テキスト"
                            Tag="{Binding Contents.Futaba.Value, Mode=OneWay, ElementName=_this}"
                            >
                            <i:Interaction.Behaviors>
                                <behavior:FocusBehavior x:Name="SearchFocusBehavior" />
                            </i:Interaction.Behaviors>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <!--
                                    <ri:EventToReactiveCommand Command="{Binding DataContext.FilterTextChangedCommand, ElementName=_this}" />
                                    -->
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <Button Grid.Column="1" VerticalAlignment="Center">
                            <Button.Content>
                                <TextBlock>
                                     ✖
                                </TextBlock>
                            </Button.Content>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=CatalogSearchTextBox}" 
                                        PropertyName="Text"
                                        Value="" />
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=CatalogSearchGrid}" 
                                        PropertyName="Visibility"
                                        Value="Collapsed" />
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=CatalogSearchButton}" 
                                        PropertyName="Visibility"
                                        Value="Visible" />
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=SearchColumn}" 
                                        PropertyName="Width"
                                        Value="Auto" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>
                    <Button x:Name="CatalogSearchButton" Grid.Column="3" Style="{StaticResource ToolbarButton}" Content="{StaticResource ButtonIconViewerSearch}" Visibility="Visible">
                        <Button.ToolTip>
                            <ToolTip Content="検索" />
                        </Button.ToolTip>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:ChangePropertyAction 
                                    TargetObject="{Binding ElementName=CatalogSearchGrid}" 
                                    PropertyName="Visibility"
                                    Value="Visible" />
                                <i:ChangePropertyAction 
                                    TargetObject="{Binding ElementName=CatalogSearchButton}" 
                                    PropertyName="Visibility"
                                    Value="Collapsed" />
                                <i:ChangePropertyAction 
                                    TargetObject="{Binding ElementName=SearchColumn}" 
                                    PropertyName="Width"
                                    Value="320*" />
                                <i:CallMethodAction
                                    TargetObject="{Binding ElementName=SearchFocusBehavior, Mode=OneWay}"
                                    MethodName="Focus" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Grid.Column="4" Style="{StaticResource ToolbarButton}" Content="{StaticResource ButtonIconCatalogSort}" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                        <Button.ToolTip>
                            <ToolTip Content="ソート" />
                        </Button.ToolTip>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:ChangePropertyAction 
                                    TargetObject="{StaticResource CatalogSortContextMenu}" 
                                    PropertyName="DataContext"
                                    Value="{Binding DataContext, ElementName=_this, Mode=OneWay}"/>
                                <i:ChangePropertyAction 
                                    TargetObject="{StaticResource CatalogSortContextMenu}" 
                                    PropertyName="Tag"
                                    Value="{Binding Contents.Futaba.Value, ElementName=_this, Mode=OneWay}"/>
                                <i:ChangePropertyAction 
                                    TargetObject="{StaticResource CatalogSortContextMenu}" 
                                    PropertyName="IsOpen"
                                    Value="True"/>
                                <i:ChangePropertyAction
                                    TargetObject="{StaticResource CatalogSortContextMenu}" 
                                    PropertyName="PlacementTarget" 
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Column="5"  Style="{StaticResource ToolbarButton}" Content="{StaticResource ButtonIconCatalogMode}" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                        <Button.ToolTip>
                            <ToolTip Content="モード切替" />
                        </Button.ToolTip>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogListWrapClickCommand, ElementName=_this}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Column="6"  Style="{StaticResource ToolbarButton}" Content="{StaticResource ButtonIconViewerThreadRes}" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                        <Button.ToolTip>
                            <ToolTip Content="スレッド作成" />
                        </Button.ToolTip>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ri:EventToReactiveCommand Command="{Binding DataContext.PostClickCommand, ElementName=_this}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Grid.Column="7" Style="{StaticResource ToolbarButtonHarf}" Content="{DynamicResource ButtonIconCatalogExpand}" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                        <Button.LayoutTransform>
                            <RotateTransform x:Name="FullScreenRotate" Angle="0" />
                        </Button.LayoutTransform>
                        <Button.ToolTip>
                            <ToolTip Content="スレッド画面最大化" />
                        </Button.ToolTip>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ri:EventToReactiveCommand Command="{Binding FullScreenClickCommand}" />
                            </i:EventTrigger>
                            <i:DataTrigger Binding="{Binding IsFullScreenMode.Value, Mode=OneWay}" Value="True" Comparison="Equal">
                                <i:ChangePropertyAction TargetName="FullScreenRotate" PropertyName="Angle" Value="180" />
                            </i:DataTrigger>
                            <i:DataTrigger Binding="{Binding IsFullScreenMode.Value, Mode=OneWay}" Value="True" Comparison="NotEqual">
                                <i:ChangePropertyAction TargetName="FullScreenRotate" PropertyName="Angle" Value="0" />
                            </i:DataTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
            </Border>

            <ListBox
                x:Name="CatalogListBox"
                Grid.Row="1"
                BorderThickness="0"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.CanContentScroll="True"
                VirtualizingPanel.ScrollUnit="Pixel"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Standard"
                >
                <ListBox.Style>
                    <MultiBinding Converter="{StaticResource FutabaCatalogStyleConverter}">
                        <Binding Path="Contents.Futaba.Value.CatalogListMode.Value" Mode="OneWay" ElementName="_this" />
                        <Binding Source="{StaticResource CatalogWrapBox}" />
                        <Binding Source="{StaticResource CatalogListBox}" />
                    </MultiBinding>
                </ListBox.Style>
                <ListBox.ItemsSource>
                    <MultiBinding Converter="{StaticResource FutabaCatalogItemFilterConverter}">
                        <Binding Path="Contents.Futaba.Value.ResItems" Mode="OneWay" ElementName="_this" />
                        <Binding Path="Contents.Futaba.Value.UpdateToken.Value" Mode="OneWay" ElementName="_this" />
                        <Binding Path="Contents.Futaba.Value.FilterText.Value" Mode="OneWay" ElementName="_this" />
                    </MultiBinding>
                </ListBox.ItemsSource>
                <ListBox.Background>
                    <SolidColorBrush Color="{DynamicResource ViewerBackgroundColor}" />
                </ListBox.Background>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <i:Interaction.Behaviors>
                    <behavior:WheelUpdateBehavior
                        Command="{Binding WheelUpdateCommand, Mode=OneWay}"
                        CommandParameter="{Binding Contents.Futaba.Value, ElementName=_this, Mode=OneWay}"
                        />
                </i:Interaction.Behaviors>
            </ListBox>

            <!-- 書き込みサブウィンドウ -->
            <local:FutabaPostView
                Grid.Row="1"
                Opacity="{Binding Contents.Futaba.Value.UpdateToken.Value, Mode=OneWay, ElementName=_this, Converter={StaticResource PostViewOpacityConverter}}"
                Contents="{Binding Contents.Futaba.Value, ElementName=_this}"
                Visibility="{Binding DataContext.PostViewVisibility.Value, ElementName=_this, Mode=TwoWay}">
                <local:FutabaPostView.MinWidth>
                    <MultiBinding Converter="{StaticResource PostViewMinWidthConverter}">
                        <Binding Path="ActualWidth" Mode="OneWay" ElementName="_this" />
                        <Binding Mode="OneWay" Source="{StaticResource DefaultMinWidth}" />
                        <Binding Path="Contents.Futaba.Value.UpdateToken.Value" Mode="OneWay" ElementName="_this" />
                    </MultiBinding>
                </local:FutabaPostView.MinWidth>
                <local:FutabaPostView.MaxWidth>
                    <MultiBinding Converter="{StaticResource PostViewMaxWidthConverter}">
                        <Binding Path="ActualWidth" Mode="OneWay" ElementName="_this" />
                        <Binding Path="Contents.Futaba.Value.UpdateToken.Value" Mode="OneWay" ElementName="_this" />
                    </MultiBinding>
                </local:FutabaPostView.MaxWidth>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:ChangePropertyAction
                            PropertyName="Opacity"
                            TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:FutabaPostView}}"
                            Value="1" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:ChangePropertyAction
                            PropertyName="Opacity"
                            TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:FutabaPostView}}"
                            Value="{Binding Contents.Futaba.Value.UpdateToken.Value, Mode=OneWay, ElementName=_this, Converter={StaticResource PostViewOpacityConverter}}" />
                    </i:EventTrigger>
                    <i:DataStoreChangedTrigger Binding="{Binding Contents.Futaba.Value.UpdateToken.Value, Mode=OneWay, ElementName=_this}">
                        <i:ChangePropertyAction
                            PropertyName="Opacity"
                            TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:FutabaPostView}}"
                            Value="{Binding Contents.Futaba.Value.UpdateToken.Value, Mode=OneWay, ElementName=_this, Converter={StaticResource PostViewOpacityConverter}}" />
                    </i:DataStoreChangedTrigger>
                </i:Interaction.Triggers>
            </local:FutabaPostView>
        </Grid>
    </Grid>
</UserControl>
