<UserControl x:Class="Yarukizero.Net.MakiMoki.Wpf.Controls.FutabaThreadResViewer"
             x:Name="_this"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ri="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
             xmlns:local="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Controls"
             xmlns:converter="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Converters"
             xmlns:behavior="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Behaviors"
             xmlns:model="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Model"
             xmlns:data="clr-namespace:Yarukizero.Net.MakiMoki.Data;assembly=MakiMoki.Core"
             mc:Ignorable="d" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:CatalogTextConverter x:Key="CatalogTextConverter"/>
        <converter:FutabaResItemConverter x:Key="FutabaResItemConverter"/>
        <converter:FutabaCatalogVisibleConverter x:Key="FutabaCatalogVisibleConverter"/>
        <converter:FutabaThreadResVisibleConverter x:Key="FutabaThreadResVisibleConverter"/>
        <converter:FutabaCatalogItemOpenedColorConverter x:Key="FutabaCatalogItemOpenedColorConverter" />
        <converter:FutabaCatalogItemFilterConverter x:Key="FutabaCatalogItemFilterConverter" />
        <converter:FutabaNewResCountConverter x:Key="FutabaNewResCountConverter"/>
        <converter:FutabaNewResVisibilityConverter x:Key="FutabaNewResVisibilityConverter"/>
        <converter:FutabaResItemBackgroundConverter x:Key="FutabaResItemBackgroundConverter" />
        <converter:FutabaResItemVisibleConverter x:Key="FutabaResItemVisibleConverter"/>
        <converter:FutabaResItemIdTextConverter x:Key="FutabaResItemIdTextConverter" />
        <converter:FutabaResItemNowConverter x:Key="FutabaResItemNowConverter"/>
        <converter:FutabaResItemFooterVisibleConverter x:Key="FutabaResItemFooterVisibleConverter" />
        <converter:FutabaResItemNextButtonEnabledConverter x:Key="FutabaResItemNextButtonEnabledConverter" />
        <converter:FutabaResItemOldColorConverter x:Key="FutabaResItemOldColorConverter" />
        <converter:FutabaResItemResCountColorConverter x:Key="FutabaResItemResCountColorConverter" />

        <Color x:Key="TextColor">Black</Color>
        <Color x:Key="OldColor">Red</Color>

        <SolidColorBrush x:Key="PrimaryColorBrush" Color="#4FC3F7" />

        <ContextMenu
            x:Key="ThreadResHamburgerContextMenu"
            Placement="Bottom"
            VerticalOffset="4" HorizontalOffset="0">
            <MenuItem Header="URLをコピー" Click="OnThreadResHamburgerItemUrlClickCommand" />
        </ContextMenu>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <!-- タブ切り替え時に画僧ビューワを初期化する -->
        <i:DataTrigger Binding="{Binding Contents, ElementName=_this}" Value="{x:Null}" Comparison="NotEqual">
            <i:ChangePropertyAction
                PropertyName="Contents"
                TargetName="MediaViewer"
                Value="{x:Null}" />
        </i:DataTrigger>
        <i:EventTrigger EventName="ContentsChanged">
            <ri:EventToReactiveCommand Command="{Binding ContentsChangedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <!-- DynamicResource取得用のElement -->
        <FrameworkElement 
            x:Name="CatalogItemBackgroundColorGetter"
            Visibility="Collapsed"
            DataContext="{DynamicResource CatalogItemBackgroundColor}" />
        <FrameworkElement 
            x:Name="CatalogItemOpendBackgroundColorGetter"
            Visibility="Collapsed"
            DataContext="{DynamicResource CatalogItemOpendBackgroundColor}" />
        <FrameworkElement 
            x:Name="ThreadBackgroundColorGetter"
            Visibility="Collapsed"
            DataContext="{DynamicResource ThreadBackgroundColor}" />
        <FrameworkElement 
            x:Name="ThreadBackgroundSerachHitColorGetter"
            Visibility="Collapsed"
            DataContext="{DynamicResource ThreadBackgroundSerachHitColor}" />
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Margin="0" BorderThickness="0 0 0 1" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource ViewerBorderColor}" />
                </Border.BorderBrush>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="0" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition x:Name="SearchColumn" Width="Auto" MaxWidth="320" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- スレッド-->
                    <TextBlock 
                        Grid.Column="1"
                        FontSize="14"
                        VerticalAlignment="Center"
                        Margin="4">
                        <TextBlock.Foreground>
                            <SolidColorBrush>
                                <SolidColorBrush.Color>
                                    <MultiBinding Converter="{StaticResource FutabaResItemOldColorConverter}">
                                        <Binding Path="Contents.Futaba.Value" Mode="OneWay" ElementName="_this" />
                                        <Binding Source="{StaticResource TextColor}" />
                                        <Binding Source="{StaticResource OldColor}" />
                                    </MultiBinding>
                                </SolidColorBrush.Color>
                            </SolidColorBrush>
                        </TextBlock.Foreground>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsDie, ElementName=_this, Mode=OneWay}" Value="False">
                                        <Setter Property="Text" Value="{Binding  Contents.Futaba.Value.Raw.Raw.Die, ElementName=_this, StringFormat='消:{0}', Mode=OneWay}"/>
                                    </DataTrigger>
                                    <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsDie, ElementName=_this, Mode=OneWay}" Value="True">
                                        <Setter Property="Text" Value="消:落ち"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>

                    </TextBlock>
                    <TextBlock
                        Grid.Column="2"
                        Text="{Binding  Contents.Futaba.Value.ResCount.Value, ElementName=_this, StringFormat='レス:{0}', Mode=OneWay}"
                        FontSize="14"                            
                        VerticalAlignment="Center"
                        Margin="4">
                        <TextBlock.Foreground>
                            <SolidColorBrush>
                                <SolidColorBrush.Color>
                                    <MultiBinding Converter="{StaticResource FutabaResItemResCountColorConverter}">
                                        <Binding Path="Contents.Futaba.Value" Mode="OneWay" ElementName="_this" />
                                        <Binding Source="{StaticResource TextColor}" />
                                        <Binding Source="{StaticResource OldColor}" />
                                    </MultiBinding>
                                </SolidColorBrush.Color>
                            </SolidColorBrush>
                        </TextBlock.Foreground>
                    </TextBlock>

                    <Button Grid.Column="3" Height="32" Margin="2" DataContext="{Binding Contents.Futaba.Value.Raw, ElementName=_this}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsDie, ElementName=_this, Mode=OneWay}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <TextBlock>
                        更新
                        </TextBlock>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ri:EventToReactiveCommand Command="{Binding DataContext.ThreadUpdateCommand, ElementName=_this}">
                                </ri:EventToReactiveCommand>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    
                    <Grid x:Name="SearchGrid" Grid.Column="4" Margin="2" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="SearchTextBox"
                            Grid.Column="0"
                            Text="{Binding Contents.Futaba.Value.FilterText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=_this}"
                            FontSize="14"
                            VerticalAlignment="Center"
                            local:PlaceHolderBehavior.PlaceHolderText="検索テキスト"
                            Tag="{Binding Contents.Futaba.Value, Mode=OneWay, ElementName=_this}"
                            >
                            <i:Interaction.Behaviors>
                                <behavior:FocusBehavior x:Name="SearchFocusBehavior" />
                            </i:Interaction.Behaviors>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <!--
                                    <ri:EventToReactiveCommand Command="{Binding DataContext.FilterTextChangedCommand, ElementName=_this}" />
                                    -->
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <Button Grid.Column="1" VerticalAlignment="Center">
                            <Button.Content>
                                <TextBlock>
                                     ✖
                                </TextBlock>
                            </Button.Content>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=SearchTextBox}" 
                                        PropertyName="Text"
                                        Value="" />
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=SearchGrid}" 
                                        PropertyName="Visibility"
                                        Value="Collapsed" />
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=SearchButton}" 
                                        PropertyName="Visibility"
                                        Value="Visible" />
                                    <i:ChangePropertyAction 
                                        TargetObject="{Binding ElementName=SearchColumn}" 
                                        PropertyName="Width"
                                        Value="Auto" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <!--
                        <TextBlock
                            Grid.Column="2"
                            Text="0件"
                            VerticalAlignment="Center"
                            Margin="2"
                            />
                        <Button Grid.Column="3" VerticalAlignment="Center">
                            <Button.Content>
                                <TextBlock>
                                     ↑
                                </TextBlock>
                            </Button.Content>
                        </Button>
                        <Button Grid.Column="4" VerticalAlignment="Center">
                            <Button.Content>
                                <TextBlock>
                                     ↓
                                </TextBlock>
                            </Button.Content>
                        </Button>
                        -->
                    </Grid>
                    <Button x:Name="SearchButton" Grid.Column="4" Width="32" Height="32" Margin="2" Visibility="Visible">
                        <Button.Content>
                            <TextBlock>
                                検索
                            </TextBlock>
                        </Button.Content>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:ChangePropertyAction 
                                    TargetObject="{Binding ElementName=SearchGrid}" 
                                    PropertyName="Visibility"
                                    Value="Visible" />
                                <i:ChangePropertyAction 
                                    TargetObject="{Binding ElementName=SearchButton}" 
                                    PropertyName="Visibility"
                                    Value="Collapsed" />
                                <i:ChangePropertyAction 
                                    TargetObject="{Binding ElementName=SearchColumn}" 
                                    PropertyName="Width"
                                    Value="320*" />
                                <i:CallMethodAction
                                    TargetObject="{Binding ElementName=SearchFocusBehavior, Mode=OneWay}"
                                    MethodName="Focus" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Grid.Column="5" Height="32" Margin="2">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsDie, ElementName=_this, Mode=OneWay}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <TextBlock>
                        書き込み
                        </TextBlock>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ri:EventToReactiveCommand Command="{Binding DataContext.PostClickCommand, ElementName=_this}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Column="6" Height="32" Margin="2">
                        <TextBlock Text=" … " />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:ChangePropertyAction 
                                    TargetObject="{StaticResource ThreadResHamburgerContextMenu}" 
                                    PropertyName="DataContext"
                                    Value="{Binding DataContext, ElementName=_this, Mode=OneWay}"/>
                                <i:ChangePropertyAction 
                                    TargetObject="{StaticResource ThreadResHamburgerContextMenu}" 
                                    PropertyName="IsOpen"
                                    Value="True"/>
                                <i:ChangePropertyAction 
                                    TargetObject="{StaticResource ThreadResHamburgerContextMenu}" 
                                    PropertyName="Tag" 
                                    Value="{Binding Contents, ElementName=_this, Mode=OneWay}"/>
                                <i:ChangePropertyAction
                                    TargetObject="{StaticResource ThreadResHamburgerContextMenu}" 
                                    PropertyName="PlacementTarget" 
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
            </Border>

            <!-- スレッド -->
            <ListBox
                x:Name="ThreadResListBox"
                Grid.Row="1"
                ItemsSource="{Binding Contents.Futaba.Value.ResItems, ElementName=_this, Mode=OneWay}"
                BorderThickness="0"
                Visibility="{Binding Contents.Futaba.Value.Raw, ElementName=_this, Converter={StaticResource FutabaThreadResVisibleConverter}, Mode=OneWay}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.CanContentScroll="True"
                VirtualizingPanel.ScrollUnit="Pixel"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                HorizontalContentAlignment="Stretch"
                >
                <ListBox.Background>
                    <SolidColorBrush Color="{DynamicResource ViewerBackgroundColor}" />
                </ListBox.Background>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel
                            Orientation="Vertical"
                            IsItemsHost="True" 
                            HorizontalAlignment="Stretch"
                            />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="16 4 16 4" Background="Transparent">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{DynamicResource ViewerForegroundColor}" />
                            </TextBlock.Foreground>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid
                                x:Name="viewGrid"
                                Grid.Column="0" Grid.Row="0"
                                MaxWidth="1024"
                                HorizontalAlignment="Left" 
                                Visibility="{Binding FutabaTextBlockVisibility.Value, Mode=OneWay}">
                                <Grid.Background>
                                    <SolidColorBrush>
                                        <SolidColorBrush.Color>
                                            <MultiBinding Converter="{StaticResource FutabaResItemBackgroundConverter}">
                                                <Binding Mode="OneWay" />
                                                <Binding Path="Contents.Futaba.Value.FilterText.Value" Mode="OneWay" ElementName="_this" />
                                                <Binding Path="DataContext" Mode="OneWay" ElementName="ThreadBackgroundColorGetter" />
                                                <Binding Path="DataContext" Mode="OneWay" ElementName="ThreadBackgroundSerachHitColorGetter" />
                                            </MultiBinding>
                                        </SolidColorBrush.Color>
                                    </SolidColorBrush>
                                </Grid.Background>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="24" />
                                </Grid.RowDefinitions>
                                <WrapPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal"
                                           TextBlock.FontSize="{DynamicResource ThreadHeaderFontSize}"
                                           TextBlock.FontFamily="{DynamicResource ThreadHeaderFont}">
                                    <!-- AlternationCount/AlternationIndexではアイテム追加時に追従してくれない -->
                                    <TextBlock>
                                        <Run Text="{Binding Index.Value, StringFormat='\{0\} ', Mode=OneWay}" />
                                    </TextBlock>
                                    <TextBlock Visibility="{Binding NameVisibility.Value, Mode=OneWay}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ThreadHeaderSubjectColor}" />
                                        </TextBlock.Foreground>
                                        <Run Text="{Binding Raw.Value.ResItem.Res.Sub, StringFormat='\{0\}', Mode=OneWay}" FontWeight="Bold" />
                                        <Run Text=" " />
                                    </TextBlock>
                                    <TextBlock Visibility="{Binding NameVisibility.Value, Mode=OneWay}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ThreadHeaderNameColor}" />
                                        </TextBlock.Foreground>
                                        <Run Text="{Binding Raw.Value.ResItem.Res.Name, StringFormat='\{0\}', Mode=OneWay}" FontWeight="Bold" />
                                        <Run Text=" " />
                                    </TextBlock>
                                    <TextBlock Visibility="{Binding Raw.Value.ResItem.Res.Email, Converter={StaticResource FutabaResItemVisibleConverter}, Mode=OneWay}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ThreadHeaderMailColor}" />
                                        </TextBlock.Foreground>
                                        <!-- メールは文字の太さを変えないのでRunはひとつでいい -->
                                        <Run Text="{Binding Raw.Value.ResItem.Res.Email,  StringFormat='[\{0\}] ', Mode=OneWay}" />
                                    </TextBlock>
                                    <TextBlock>
                                        <Run Text="{Binding Raw.Value.ResItem.Res.Now, StringFormat='\{0\} ', Converter={StaticResource FutabaResItemNowConverter}, Mode=OneWay}" />
                                    </TextBlock>
                                    <TextBlock Visibility="{Binding Raw.Value.ResItem.Res.Id, Converter={StaticResource FutabaResItemVisibleConverter}, Mode=OneWay}">
                                        <Run Text="{Binding Converter={StaticResource FutabaResItemIdTextConverter}, Mode=OneWay}" />
                                        <Run Text=" " />
                                    </TextBlock>
                                    <TextBlock Visibility="{Binding Raw.Value.Soudane, Converter={StaticResource FutabaResItemVisibleConverter}, Mode=OneWay}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ThreadHeaderSoudaneColor}" />
                                        </TextBlock.Foreground>
                                        <!-- そうだねは文字の太さを変えないのでRunはひとつでいい -->
                                        <Run Text="{Binding Raw.Value.Soudane, Mode=OneWay, StringFormat='そうだね×\{0\} '}" />
                                    </TextBlock>
                                    <TextBlock>
                                        <Run Text="{Binding Raw.Value.ResItem.No,  StringFormat='No.\{0\} ', Mode=OneWay}" />
                                    </TextBlock>
                                </WrapPanel>
                                <WrapPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" 
                                           TextBlock.FontSize="{DynamicResource ThreadTextFontSize}"
                                           TextBlock.FontFamily="{DynamicResource ThreadTextFont}">
                                    <Grid  Visibility="{Binding ResImageVisibility.Value, Mode=OneWay}"
                                           TextBlock.FontSize="{DynamicResource ThreadTextFontSize}"
                                           TextBlock.FontFamily="{DynamicResource ThreadTextFont}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <TextBlock
                                            Grid.Row="0"
                                            FontSize="14"
                                            Text="{Binding ImageName.Value}" 
                                            HorizontalAlignment="Left" />
                                        <Viewbox
                                            Grid.Row="1"
                                            HorizontalAlignment="Left"
                                            StretchDirection="DownOnly">
                                            <Button BorderThickness="0" BorderBrush="Transparent" Margin="0 0 4 0">
                                                <Image 
                                                    Source="{Binding ThumbSource.Value}"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    RenderOptions.BitmapScalingMode="Fant">
                                                    <Image.CacheMode>
                                                        <BitmapCache RenderAtScale="1" />
                                                    </Image.CacheMode>
                                                </Image>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseDown">
                                                        <ri:EventToReactiveCommand Command="{Binding DataContext.ThreadImageMouseDownCommand, ElementName=_this}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewMouseUp">
                                                        <ri:EventToReactiveCommand Command="{Binding DataContext.ThreadImageClickCommand, ElementName=_this}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Button>
                                        </Viewbox>
                                    </Grid>
                                    <local:FutabaCommentBlock Text="{Binding CommentHtml.Value, Mode=OneWay}" TextWrapping="Wrap" Margin="4 4 0 4">
                                        <local:FutabaCommentBlock.Inline>
                                            <Binding Path="CommentHtml.Value" Mode="OneWay" />
                                        </local:FutabaCommentBlock.Inline>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LinkClick">
                                                <ri:EventToReactiveCommand Command="{Binding DataContext.LinkClickCommand, ElementName=_this}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </local:FutabaCommentBlock>
                                </WrapPanel>
                                <Button 
                                    x:Name="copyButton" 
                                    Grid.Column="1" Grid.Row="2" 
                                    Width="24" Height="24" Opacity="0.6"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom" Visibility="Hidden">
                                    <TextBlock>マ</TextBlock>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:CallMethodAction
                                                MethodName="StartCopyMode"
                                                TargetObject="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <!-- Interaction.Triggers使えない？ -->
                                        <MenuItem Header="レスをコピー" Click="OnMenuItemCopyClickCommand" />
                                        <MenuItem Header="返信" Click="OnMenuItemReplyClickCommand">
                                            <!--
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ri:EventToReactiveCommand Command="{Binding DataContext.MenuItemReplyClickCommand, ElementName=_this}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            -->
                                        </MenuItem>
                                        <MenuItem Header="そうだね" Click="OnMenuItemSoudaneClickCommand" />
                                        <MenuItem Header="del" Click="OnMenuItemDelClickCommand" />
                                        <MenuItem Header="削除" Click="OnMenuItemDeleteClickCommand" />
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:ChangePropertyAction PropertyName="Visibility" TargetName="copyButton" Value="Visible" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:ChangePropertyAction PropertyName="Visibility" TargetName="copyButton" Value="Hidden" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseDown">
                                        <ri:EventToReactiveCommand Command="{Binding DataContext.FutabaTextBlockMouseDownCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Grid>
                            <Grid
                                x:Name="copywGrid"
                                Grid.Column="0" Grid.Row="0"
                                MaxWidth="1024"
                                Background="Transparent"
                                HorizontalAlignment="Left"
                                Visibility="{Binding CopyBlockVisibility.Value, Mode=OneWay}">
                                <TextBox
                                    Text="{Binding CommentCopy.Value, Mode=OneWay}"
                                    TextWrapping="Wrap" Margin="4"
                                    FontSize="16"
                                    IsReadOnly="True">
                                    <i:Interaction.Behaviors>
                                        <behavior:FocusBehavior x:Name="copyTextBox" />
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:CallMethodAction
                                            MethodName="EndCopyMode"
                                            TargetObject="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" />
                                    </i:EventTrigger>
                                    <i:DataTrigger Binding="{Binding IsVisible, Mode=OneWay, ElementName=copywGrid}"  Value="true" Comparison="Equal">
                                        <i:CallMethodAction TargetObject="{Binding ElementName=copyTextBox, Mode=OneWay}" MethodName="Focus" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                            </Grid>
                            <!-- リストビューアイテムフッタ テンプレートで何とかしたいけど無理だったよ… -->
                            <Grid 
                                Grid.Column="0" Grid.Row="1"
                                Margin="0 4 0 4"
                                Visibility="{Binding Converter={StaticResource FutabaResItemFooterVisibleConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button
                                    Grid.Column="0" 
                                    MinWidth="128" Height="40"
                                    IsEnabled="{Binding  Parent.Value, Mode=OneWay, Converter={StaticResource FutabaResItemNextButtonEnabledConverter}}">
                                    <TextBlock>
                                        続きを読む
                                    </TextBlock>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.ThreadUpdateCommand, ElementName=_this}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Border Grid.Column="2" BorderBrush="Black" BorderThickness="1" CornerRadius="4" Padding="4">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="4" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            VerticalAlignment="Center"
                                            Text="{Binding Parent.Value.DieTextLong.Value, Mode=OneWay}"
                                            FontSize="14">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush>
                                                    <SolidColorBrush.Color>
                                                        <MultiBinding Converter="{StaticResource FutabaResItemOldColorConverter}">
                                                            <Binding Path="Parent.Value" Mode="OneWay" />
                                                            <Binding Source="{StaticResource TextColor}" />
                                                            <Binding Source="{StaticResource OldColor}" />
                                                        </MultiBinding>
                                                    </SolidColorBrush.Color>
                                                </SolidColorBrush>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                        <Button Grid.Column="2" Height="32">
                                            <TextBlock>
                                                保存
                                            </TextBlock>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ri:EventToReactiveCommand Command="{Binding Parent.Value.ExportCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <local:FutabaMediaViewer
                x:Name="MediaViewer"
                Grid.Row="1"
                Contents="{Binding Contents.MediaContents.Value, ElementName=_this, Mode=TwoWay}"
                />

            <!-- 書き込みサブウィンドウ -->
            <local:FutabaPostView
                Grid.Row="1"
                Contents="{Binding Contents.Futaba.Value, ElementName=_this}"
                Visibility="{Binding DataContext.PostViewVisibility.Value, ElementName=_this, Mode=TwoWay}" />
        </Grid>
    </Grid>
</UserControl>
