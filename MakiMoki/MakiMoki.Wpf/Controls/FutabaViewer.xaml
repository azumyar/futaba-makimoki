<UserControl x:Class="Yarukizero.Net.MakiMoki.Wpf.Controls.FutabaViewer"
             x:Name="_this"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ri="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
             xmlns:local="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Controls"
             xmlns:converter="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Converters"
             xmlns:model="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Model"
             xmlns:data="clr-namespace:Yarukizero.Net.MakiMoki.Data;assembly=MakiMoki.Core"
             mc:Ignorable="d" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:CatalogTextConverter x:Key="CatalogTextConverter"/>
        <converter:FutabaResItemConverter x:Key="FutabaResItemConverter"/>
        <converter:FutabaCatalogVisibleConverter x:Key="FutabaCatalogVisibleConverter"/>
        <converter:FutabaThreadResVisibleConverter x:Key="FutabaThreadResVisibleConverter"/>
        <converter:FutabaNewResCountConverter x:Key="FutabaNewResCountConverter"/>
        <converter:FutabaNewResVisibilityConverter x:Key="FutabaNewResVisibilityConverter"/>
        <converter:FutabaResItemVisibleConverter x:Key="FutabaResItemVisibleConverter"/>
        <converter:FutabaResItemNowConverter x:Key="FutabaResItemNowConverter"/>

        <SolidColorBrush x:Key="BackgroundBrush" Color="#F5F5F5" />
        <SolidColorBrush x:Key="DockBorderBrush" Color="Gray" />
        <SolidColorBrush x:Key="PrimaryColorBrush" Color="#4FC3F7" />
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <!-- タブ切り替え時に画僧ビューワを初期化する -->
        <i:DataTrigger Binding="{Binding Contents, ElementName=_this}" Value="{x:Null}" Comparison="NotEqual">
            <i:ChangePropertyAction
                PropertyName="Contents"
                TargetName="MediaViewer"
                Value="{x:Null}" />
        </i:DataTrigger>
        <i:EventTrigger EventName="ContentsChanged">
            <ri:EventToReactiveCommand Command="{Binding ContentsChangedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Margin="0" BorderThickness="0 0 0 1" BorderBrush="{StaticResource DockBorderBrush}" DataContext="{Binding Contents.Futaba.Value, ElementName=_this}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="0" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!-- カタログ -->
                    <WrapPanel Grid.Column="1" HorizontalAlignment="Right"  Visibility="{Binding Contents.Futaba.Value.Raw, ElementName=_this, Converter={StaticResource FutabaCatalogVisibleConverter}}">
                        <Button
                            Height="32"
                            Margin="2"
                            DataContext="{Binding Contents.Futaba.Value.Raw, ElementName=_this}"
                            >
                            <TextBlock>
                            更新
                            </TextBlock>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogUpdateClickCommand, ElementName=_this}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button
                            IsEnabled="False"
                            Height="32"
                            Margin="2">
                            <TextBlock>
                            ソート
                            </TextBlock>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <!--
                                    <ri:EventToReactiveCommand Command="{Binding CatalogSortClickCommand}" />
                                    -->
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button
                            Height="32"
                            Margin="2">
                            <TextBlock>
                            スレ立て
                            </TextBlock>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ri:EventToReactiveCommand Command="{Binding DataContext.PostClickCommand, ElementName=_this}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </WrapPanel>
                    <!-- スレッド-->
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="14"
                        Margin="4"
                        TextTrimming="CharacterEllipsis"
                        Text="{Binding Raw.Bord.Name, Mode=OneWay}"
                        Visibility="{Binding Contents.Futaba.Value.Raw, ElementName=_this, Converter={StaticResource FutabaThreadResVisibleConverter}, Mode=OneWay}" />
                    <WrapPanel Grid.Column="1" HorizontalAlignment="Right" Visibility="{Binding Contents.Futaba.Value.Raw, ElementName=_this, Converter={StaticResource FutabaThreadResVisibleConverter}, Mode=OneWay}">
                        <WrapPanel.Style>
                            <Style TargetType="WrapPanel">
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsDie, ElementName=_this, Mode=OneWay}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </WrapPanel.Style>
                        <TextBlock 
                            FontSize="14"
                            VerticalAlignment="Center"
                            Margin="4">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsDie, ElementName=_this, Mode=OneWay}" Value="False">
                                            <Setter Property="Text" Value="{Binding  Contents.Futaba.Value.Raw.Raw.Die, ElementName=_this, StringFormat='消:{0}', Mode=OneWay}"/>
                                        </DataTrigger>
                                        <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsOld, ElementName=_this, Mode=OneWay}" Value="True">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger  Binding="{Binding Contents.Futaba.Value.Raw.Raw.IsDie, ElementName=_this, Mode=OneWay}" Value="True">
                                            <Setter Property="Foreground" Value="Red"/>
                                            <Setter Property="Text" Value="消:落ち"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>
                        <TextBlock
                            Text="{Binding  Contents.Futaba.Value.ResCount.Value, ElementName=_this, StringFormat='レス:{0}', Mode=OneWay}"
                            FontSize="14"                            
                            VerticalAlignment="Center"
                            Margin="4" />
                        <Button
                    Height="32"
                    Margin="2"
                    DataContext="{Binding Contents.Futaba.Value.Raw, ElementName=_this}"
                    >
                            <TextBlock>
                            更新
                            </TextBlock>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ri:EventToReactiveCommand Command="{Binding DataContext.ThreadUpdateCommand, ElementName=_this}">
                                    </ri:EventToReactiveCommand>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button
                    Height="32"
                    Margin="2">
                            <TextBlock>
                            書き込み
                            </TextBlock>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ri:EventToReactiveCommand Command="{Binding DataContext.PostClickCommand, ElementName=_this}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </WrapPanel>
                </Grid>
            </Border>
            <ListBox
                x:Name="CatalogListBox"
                Grid.Row="1"
                ItemsSource="{Binding Contents.Futaba.Value.ResItems.Value, ElementName=_this, Mode=OneWay}"
                Background="{StaticResource BackgroundBrush}"
                BorderThickness="0"
                Visibility="{Binding Contents.Futaba.Value.Raw, ElementName=_this, Converter={StaticResource FutabaCatalogVisibleConverter}}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.CanContentScroll="True"
                VirtualizingPanel.ScrollUnit="Pixel"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="ForestGreen"/>
                            <Setter Property="Foreground" Value="Gold"/>
                        </Trigger>
                    </Style.Triggers>
                    -->
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <vwp:VirtualizingWrapPanel IsItemsHost="True"  HorizontalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Button
                                x:Name="button"
                                Background="White"
                                Margin="4" 
                                BorderThickness="0"
                                BorderBrush="Transparent"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                                <Grid x:Name="CatalogItem" Width="72" Height="86">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="72" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="72"/>
                                        <RowDefinition Height="14"/>
                                    </Grid.RowDefinitions>
                                    <!-- スレ画-->
                                    <Viewbox
                                        Grid.Row="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        >
                                        <Image
                                            Source="{Binding ThumbSource.Value, Mode=OneWay}"
                                            RenderOptions.EdgeMode="Aliased"
                                            RenderOptions.BitmapScalingMode="Fant">
                                            <Image.CacheMode>
                                                <BitmapCache RenderAtScale="1" />
                                            </Image.CacheMode>
                                        </Image>
                                    </Viewbox>
                                    <!-- 新着レス数-->
                                    <Grid
                                        Grid.Row="0"
                                        Margin="2"
                                        Width="16"
                                        Height="16"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Visibility="{Binding Raw.Value, Converter={StaticResource FutabaNewResVisibilityConverter}, Mode=OneWay}"
                                        >
                                        <Ellipse Width="16" Height="16" Fill="Red" />
                                        <TextBlock
                                            Text="{Binding Raw.Value, Converter={StaticResource FutabaNewResCountConverter}, Mode=OneWay}"
                                            FontSize="10"
                                            Foreground="White"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Padding="0 0 0 1"/>
                                    </Grid>
                                    <!-- レス-->
                                    <Grid
                                        Grid.Column="0"
                                        Grid.Row="1"
                                        VerticalAlignment="Bottom"
                                        Width="{Binding ActualWidth, ElementName=CatalogItem, Mode=OneWay}"
                                        Height="16">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding Raw.Value.ResItem.Res, Converter={StaticResource CatalogTextConverter}, Mode=OneWay}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom"/>
                                        <TextBlock
                                            Grid.Column="2"
                                            Text="{Binding Raw.Value.CounterCurrent, Mode=OneWay}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"/>
                                    </Grid>
                                </Grid>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogItemMouseDownCommand, ElementName=_this}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseUp">
                                        <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogItemClickCommand, ElementName=_this}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- スレッド -->
            <ListBox
                x:Name="ThreadResListBox"
                Grid.Row="1"
                ItemsSource="{Binding Contents.Futaba.Value.ResItems.Value, ElementName=_this, Mode=OneWay}"
                Background="{StaticResource BackgroundBrush}"
                BorderThickness="0"
                Visibility="{Binding Contents.Futaba.Value.Raw, ElementName=_this, Converter={StaticResource FutabaThreadResVisibleConverter}, Mode=OneWay}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.CanContentScroll="True"
                VirtualizingPanel.ScrollUnit="Pixel"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                HorizontalContentAlignment="Stretch"
                >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel
                            Orientation="Vertical"
                            IsItemsHost="True" 
                            HorizontalAlignment="Left"
                            Width="{Binding ActualWidth, ElementName=ThreadResContainer, Mode=OneWay}"
                            MaxWidth="1024"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical" Margin="16 4 16 4" Background="Transparent">
                            <WrapPanel Orientation="Horizontal" TextBlock.FontSize="14">
                                <!-- AlternationCount/AlternationIndexではアイテム追加時に追従してくれない -->
                                <TextBlock>
                                    <Run Text="{Binding Index.Value, StringFormat='\{0\} ', Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock Visibility="{Binding NameVisibility.Value, Mode=OneWay}">
                                    <Run Text="{Binding Raw.Value.ResItem.Res.Sub, StringFormat='\{0\} ', Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock Visibility="{Binding NameVisibility.Value, Mode=OneWay}">
                                    <Run Text="{Binding Raw.Value.ResItem.Res.Name, StringFormat='\{0\} ', Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock Visibility="{Binding Raw.Value.ResItem.Res.Email, Converter={StaticResource FutabaResItemVisibleConverter}, Mode=OneWay}">
                                    <Run Text="{Binding Raw.Value.ResItem.Res.Email,  StringFormat='[\{0\}] ', Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock>
                                    <Run Text="{Binding Raw.Value.ResItem.Res.Now, StringFormat='\{0\} ', Converter={StaticResource FutabaResItemNowConverter}, Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock Visibility="{Binding Raw.Value.ResItem.Res.Id, Converter={StaticResource FutabaResItemVisibleConverter}, Mode=OneWay}">
                                    <Run Text="{Binding Raw.Value.ResItem.Res.Id, Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock Visibility="{Binding Raw.Value.ResItem.Res.Host, Converter={StaticResource FutabaResItemVisibleConverter}, Mode=OneWay}">
                                    <Run Text="{Binding Raw.Value.ResItem.Res.Host, StringFormat='\{0\} ', Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock Visibility="{Binding Raw.Value.Soudane, Converter={StaticResource FutabaResItemVisibleConverter}, Mode=OneWay}">
                                    <Run Text="{Binding Raw.Value.Soudane, Mode=OneWay, StringFormat='そうだね×\{0\} '}" />
                                </TextBlock>
                                <TextBlock>
                                    <Run Text="{Binding Raw.Value.ResItem.No,  StringFormat='No.\{0\} ', Mode=OneWay}" />
                                </TextBlock>
                            </WrapPanel>
                            <WrapPanel Orientation="Horizontal" TextBlock.FontSize="16">
                                <Grid  Visibility="{Binding ResImageVisibility.Value, Mode=OneWay}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Grid.Row="0"
                                        FontSize="14"
                                        Text="{Binding ImageName.Value}" 
                                        HorizontalAlignment="Left" />
                                    <Viewbox
                                        Grid.Row="1"
                                        HorizontalAlignment="Left"
                                        StretchDirection="DownOnly">
                                        <Button BorderThickness="0" BorderBrush="Transparent" Margin="0 0 4 0">
                                            <Image 
                                                Source="{Binding ThumbSource.Value}"
                                                RenderOptions.EdgeMode="Aliased"
                                                RenderOptions.BitmapScalingMode="Fant">
                                                <Image.CacheMode>
                                                    <BitmapCache RenderAtScale="1" />
                                                </Image.CacheMode>
                                            </Image>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown">
                                                    <ri:EventToReactiveCommand Command="{Binding DataContext.ThreadImageMouseDownCommand, ElementName=_this}" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="PreviewMouseUp">
                                                    <ri:EventToReactiveCommand Command="{Binding DataContext.ThreadImageClickCommand, ElementName=_this}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </Viewbox>
                                </Grid>
                                <local:FutabaCommentBlock Text="{Binding Raw.Value.ResItem.Res.Com, Mode=OneWay}" TextWrapping="Wrap" Margin="4 4 0 4">
                                    <local:FutabaCommentBlock.Inline>
                                        <Binding Path="Raw.Value.ResItem.Res.Com" Mode="OneWay" />
                                    </local:FutabaCommentBlock.Inline>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LinkClick">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.LinkClickCommand, ElementName=_this}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </local:FutabaCommentBlock>
                            </WrapPanel>
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <!-- Interaction.Triggers使えない？ -->
                                    <MenuItem Header="レスをコピー" Click="OnMenuItemCopyClickCommand">
                                    </MenuItem>
                                    <MenuItem Header="返信" Click="OnMenuItemReplyClickCommand">
                                        <!--
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <ri:EventToReactiveCommand Command="{Binding DataContext.MenuItemReplyClickCommand, ElementName=_this}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        -->
                                    </MenuItem>
                                    <MenuItem Header="そうだね" Click="OnMenuItemSoudaneClickCommand" />
                                    <MenuItem Header="del" Click="OnMenuItemDelClickCommand" IsEnabled="False" />
                                    <MenuItem Header="削除" Click="OnMenuItemDeleteClickCommand" />
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <local:FutabaMediaViewer
                x:Name="MediaViewer"
                Grid.Row="1"
                Contents="{Binding Contents.MediaContents.Value, ElementName=_this, Mode=TwoWay}"
                />

            <!-- 書き込みサブウィンドウ -->
            <Border
                x:Name="PostView"
                Grid.Row="1"
                MinWidth="360"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                DataContext="{Binding Contents.Futaba.Value, ElementName=_this}"
                Background="{StaticResource BackgroundBrush}"
                BorderBrush="{StaticResource DockBorderBrush}"
                BorderThickness="1"
                CornerRadius="6"
                Margin="4"
                Visibility="{Binding DataContext.PostViewVisibility.Value, ElementName=_this, Mode=OneWay}">
                <i:Interaction.Triggers>
                    <i:DataTrigger Binding="{Binding ActualWidth, ElementName=_this, Mode=OneWay}" Value="380" Comparison="GreaterThan">
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="MinWidth" Value="380" />
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="Width">
                            <i:ChangePropertyAction.Value>
                                <sys:Double>NaN</sys:Double>
                            </i:ChangePropertyAction.Value>
                        </i:ChangePropertyAction>
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="CornerRadius" Value="6" />
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="Margin" Value="4" />
                    </i:DataTrigger>
                    <i:DataTrigger Binding="{Binding ActualWidth, ElementName=_this, Mode=OneWay}" Value="380" Comparison="LessThanOrEqual">
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="MinWidth" Value="{Binding ActualWidth, ElementName=_this, Mode=OneWay}" />
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="Width" Value="{Binding ActualWidth, ElementName=_this, Mode=OneWay}" />
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="CornerRadius" Value="0" />
                        <i:ChangePropertyAction TargetName="PostView" PropertyName="Margin" Value="0" />
                    </i:DataTrigger>
                </i:Interaction.Triggers>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="6" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border
                        Grid.Column="0" Grid.ColumnSpan="3"
                        Grid.Row="0"
                        Background="{StaticResource PrimaryColorBrush}"
                        >
                        <TextBlock FontSize="16" Margin="2" Text="{Binding PostTitle.Value, Mode=OneWay}" />
                    </Border>
                    <ScrollViewer Grid.Column="1" Grid.Row="1" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                        <StackPanel Orientation="Vertical" TextBlock.FontSize="14">
                            <TextBox 
                                AcceptsReturn="True" 
                                Margin="0 4 0 4"
                                Padding="1"
                                Text="{Binding PostData.Value.Comment.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                local:PlaceHolderBehavior.PlaceHolderText="コメント" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Margin="2 2 0 2" Text="{Binding  PostData.Value.CommentBytes.Value, StringFormat='たぶん\{0\}byte', Mode=OneWay}" />
                                <TextBlock Margin="2 2 0 2" Text="{Binding  PostData.Value.CommentLines.Value, StringFormat='\{0\}行', Mode=OneWay}" />
                            </StackPanel>
                            <Grid Visibility="Collapsed">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                    <TextBlock
                                        Margin="0 4 0 4"
                                        Text="{Binding PostData.Value.ImageName.Value, Mode=OneWay}" />
                                    <Viewbox Width="128" Height="128"  StretchDirection="DownOnly">
                                        <Image 
                                            Source="{Binding PostData.Value.ImagePreview.Value, Mode=OneWay}"
                                            RenderOptions.EdgeMode="Aliased"
                                            RenderOptions.BitmapScalingMode="Fant">
                                            <Image.CacheMode>
                                                <BitmapCache RenderAtScale="1" />
                                            </Image.CacheMode>
                                        </Image>
                                    </Viewbox>
                                </StackPanel>
                                <Button
                                    Margin="4"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top">
                                    <TextBlock>
                                        ✖
                                    </TextBlock>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseUp">
                                            <ri:EventToReactiveCommand Command="{Binding DeleteImageCommand, Mode=OneWay}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding PostData.Value.ImagePath.Value.Length, Mode=OneWay}" Value="0" Comparison="Equal">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding PostData.Value.ImagePath.Value.Length, Mode=OneWay}" Value="0" Comparison="NotEqual">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                            </Grid>
                            <TextBox
                                Margin="0 4 0 4"
                                Padding="1"
                                Visibility="{Binding PostNameVisibility.Value, Mode=OneWay}"
                                Text="{Binding PostData.Value.Name.Value, Mode=TwoWay}"
                                local:PlaceHolderBehavior.PlaceHolderText="おなまえ" />
                            <TextBox 
                                Margin="0 4 0 4"
                                Padding="1"
                                Text="{Binding PostData.Value.Mail.Value, Mode=TwoWay}"
                                local:PlaceHolderBehavior.PlaceHolderText="メールアドレス" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button Margin="4 0 0 0" Visibility="{Binding PostIdOptionVisibility.Value, Mode=OneWay}">
                                    <Button.Content>
                                        ID表示
                                    </Button.Content>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ri:EventToReactiveCommand Command="{Binding MailIdClickCommand, Mode=OneWay}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Margin="4 0 0 0" Visibility="{Binding PostIpOptionVisibility.Value, Mode=OneWay}">
                                    <Button.Content>
                                        IP表示
                                    </Button.Content>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ri:EventToReactiveCommand Command="{Binding MailIpClickCommand, Mode=OneWay}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Margin="4 0 0 0">
                                    <Button.Content>
                                        sage
                                    </Button.Content>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ri:EventToReactiveCommand Command="{Binding MailSageClickCommand, Mode=OneWay}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </StackPanel>
                            <TextBox
                                Margin="0 4 0 4"
                                Padding="1"
                                 Visibility="{Binding PostNameVisibility.Value, Mode=OneWay}"
                                Text="{Binding PostData.Value.Subject.Value, Mode=TwoWay}"
                                local:PlaceHolderBehavior.PlaceHolderText="題名" />
                            <TextBox
                                Margin="0 4 0 4"
                                Padding="1"
                                Text="{Binding PostData.Value.Password.Value, Mode=TwoWay}"
                                local:PlaceHolderBehavior.PlaceHolderText="パスワード" />
                        </StackPanel>
                    </ScrollViewer>
                    <Border
                        Grid.Column="0" Grid.ColumnSpan="3"
                        Grid.Row="2"
                        Background="{StaticResource PrimaryColorBrush}"
                        >
                        <StackPanel Orientation="Horizontal">
                            <Button Height="24" Margin="2" Command="{Binding PostData.Value.PostButtonCommand}">
                                <TextBlock>投稿</TextBlock>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseUp">
                                        <ri:EventToReactiveCommand Command="{Binding DataContext.PostViewPostCommand, ElementName=_this}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button Height="24" Margin="2" Visibility="{Binding PostImageVisibility.Value, Mode=OneWay}">
                                <TextBlock>画像</TextBlock>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseUp">
                                        <ri:EventToReactiveCommand Command="{Binding OpenImageCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button Height="24" Margin="2">
                                <TextBlock>破棄</TextBlock>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseUp">
                                        <ri:EventToReactiveCommand Command="{Binding DeletePostDataCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
