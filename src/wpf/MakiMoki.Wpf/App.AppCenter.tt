<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Management.Automation" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Management.Automation" #>
<#@ import namespace="System.Management.Automation.Runspaces" #>
<#@ output extension=".cs" #>
<#
	var secrets = "";

	var conf = "appcenter-secrets.json";
	var confPath = Path.Combine(
		Path.GetDirectoryName(this.Host.TemplateFile),
		"Properties",
		conf);
	if(File.Exists(confPath)) {
		try {
			using(var rs = RunspaceFactory.CreateRunspace())
			using(var ps = PowerShell.Create()) {
				rs.Open();
				ps.Runspace = rs;
				var result = ps
					.AddScript($"(Get-Content \"{ confPath }\" | ConvertFrom-Json).secrets")
					.Invoke();
				if(result?.Count == 1) {
					secrets = result[0].ToString();
				}
			}
		}
		catch {}
	}
#>
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Media;
using System.Windows.Navigation;
using Microsoft.AppCenter;
using Microsoft.AppCenter.Analytics;
using Microsoft.AppCenter.Crashes;

namespace Yarukizero.Net.MakiMoki.Wpf {
	public partial class App {
		private static void StartAppCenter() {
<# if(!string.IsNullOrEmpty(secrets)) { #>
#if !DEBUG
			Yarukizero.Net.MakiMoki.Config.ConfigLoader.StartAppCenter("<#= secrets #>");
#endif
<# } #>
		}

	}
}