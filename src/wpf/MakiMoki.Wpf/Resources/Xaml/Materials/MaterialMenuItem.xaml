<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behavior="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Behaviors">

    <Style x:Key="MaterialContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MakimokiForegroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MakimokiBackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MakimokiBorderColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        <i:Interaction.Behaviors>
                            <behavior:FluentContextMenuBehavior ContextMenu="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                        </i:Interaction.Behaviors>                    
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,4,0,4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    -->
    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <!--
                        <RepeatButton
                            Style="{StaticResource MenuScrollButton}"
                            Grid.Row="0" Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource UpArrow}" />
                        </RepeatButton>
                        <RepeatButton
                            Style="{StaticResource MenuScrollButton}"
                            Grid.Row="2" Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource DownArrow}" />
                        </RepeatButton>
                        -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border>
                        <Rectangle
                            Margin="8,0,8,0"
                            Height="{TemplateBinding Height}"
                            HorizontalAlignment="Stretch">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource MakimokiBorderColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MakimokiForegroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource MakimokiUiFont}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border MinHeight="36">
                        <Grid>
                            <Border
                                x:Name="Hilight"
                                Margin="2"
                                CornerRadius="4"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Opacity="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource MakimokiPrimaryColor}" />
                                </Border.Background>
                            </Border>
                            <Grid Margin="8,4,8,4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32" />
                                    <ColumnDefinition Width="*" MinWidth="168" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--
                                	e739	Checkbox
CheckboxComposite	e73a	CheckboxComposite
                                	e73e	CheckMark
                                -->
                                <TextBlock
                                    x:Name="CheckMark"
                                    Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Text="&#xe73e;"
                                    FontFamily="Segoe Fluent Icons,Segoe MDL2 Assets,Segoe UI Symbol"
                                    />
                                <ContentPresenter
                                    x:Name="Icon"
                                    Grid.Column="0"
                                    Width="24" Height="24"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon"
                                    />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="8,0,0,0"
                                    VerticalAlignment="Center"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True"
                                    />
                                <TextBlock
                                    x:Name="InputGestureText"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Text="{TemplateBinding InputGestureText}"
                                    Margin="8,0,4,0"
                                    Opacity="0.7"
                                    />
                                <TextBlock
                                    x:Name="SubmenuPath"
                                    Grid.Column="3"
                                    Visibility="Hidden"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Text="&#xe76c;"
                                    FontFamily="Segoe Fluent Icons,Segoe MDL2 Assets,Segoe UI Symbol"
                                    FontSize="11"
                                    />
                                <Popup
                                    x:Name="Popup"
                                    Placement="Right"
                                    HorizontalOffset="8"
                                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Fade">
                                    <Border
                                        x:Name="SubmenuBorder"
                                        SnapsToDevicePixels="True"
                                        BorderThickness="1">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource MakimokiBackgroundColor}" />
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource MakimokiBorderColor}" />
                                        </Border.BorderBrush>
                                        <ScrollViewer
                                            CanContentScroll="True"
                                            Style="{StaticResource MenuScrollViewer}">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </ScrollViewer>
                                        <i:Interaction.Behaviors>
                                            <behavior:FluentSubMenuBehavior Popup="{Binding Mode=OneWay, ElementName=Popup}" />
                                        </i:Interaction.Behaviors>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility"  Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility"  Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Hilight" Property="Opacity"  Value="0.7" />
                        </Trigger>
                        <!--
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                        </Trigger>
                        -->
                        <Trigger Property="InputGestureText" Value="{x:Null}">
                            <Setter TargetName="InputGestureText" Property="Visibility"  Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="SubmenuPath" Property="Visibility"  Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource MakimokiForegroundColor}" Opacity="0.7" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MaterialContextMenu}" />
    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialMenuItem}" />
</ResourceDictionary>