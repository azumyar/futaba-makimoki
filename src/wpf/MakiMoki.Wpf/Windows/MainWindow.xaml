<Window x:Class="Yarukizero.Net.MakiMoki.Wpf.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ri="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        xmlns:local="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Windows"
        xmlns:model="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Model"
        xmlns:control="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Controls"
        xmlns:converter="clr-namespace:Yarukizero.Net.MakiMoki.Wpf.Converters"
        xmlns:data="clr-namespace:Yarukizero.Net.MakiMoki.Data;assembly=MakiMoki.Core"
        xmlns:util="clr-namespace:Yarukizero.Net.MakiMoki.Util;assembly=MakiMoki.Core"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        d:DesignHeight="450" d:DesignWidth="800"
        Topmost="{Binding Topmost.Value, Mode=OneWay}"
        control:InputBindingsBehavior.Source="{Binding KeyGestures.Value, Mode=OneWay}"
        Title="ふたマキ">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Xaml/FlatButton.xaml"/>
                <ResourceDictionary Source="/Resources/Xaml/TabButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converter:FutabaResItemVisibleConverter x:Key="FutabaResItemVisibleConverter"/>
            <converter:TabItemWidthConverter x:Key="TabItemWidthConverter"/>
            <converter:TabItemCatalogConverter x:Key="TabItemCatalogConverter"/>
            <converter:TabItemThreadConverter x:Key="TabItemThreadConverter"/>
            <converter:TabLastMenuItemConverter x:Key="TabLastMenuItemConverter" />
            <converter:ThreadDieOpacityConverter x:Key="ThreadDieOpacityConverter" />
            <converter:ThreadNewResVisibleConverter x:Key="ThreadNewResVisibleConverter" />
            <converter:TabItemHilightConverter x:Key="TabItemHilightConverter" />

            <system:Double x:Key="WindowCaptionHeight">36</system:Double>

            <Style TargetType="local:MainWindow">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome
                            CornerRadius="0"
                            GlassFrameThickness="0"
                            CaptionHeight="{StaticResource WindowCaptionHeight}"
                            ResizeBorderThickness="8" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:MainWindow">
                            <!--
                                BorderThickness="2 0 2 2" をやりたいけど
                                BorderのBorderBrushはDynamicResourceが動かないのでGridで強引に作る
                            -->
                            <Grid>
                                <Grid.Background>
                                    <SolidColorBrush Color="{DynamicResource WindowFrameBorderColor}" />
                                </Grid.Background>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="BorderTop" Height="0" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition x:Name="BorderBottom" Height="2" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="BorderLeft" Width="2" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition x:Name="BorderRight" Width="2" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="1" Grid.Column="1" BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                    </Border.Background>
                                    <ContentPresenter
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="WindowState" Value="Maximized">
                                    <!--
                                    <Setter TargetName="border" Property="BorderThickness" Value="8" />
                                    -->
                                    <Setter TargetName="BorderTop" Property="Height" Value="8" />
                                    <Setter TargetName="BorderBottom" Property="Height" Value="8" />
                                    <Setter TargetName="BorderLeft" Property="Width" Value="8" />
                                    <Setter TargetName="BorderRight" Property="Width" Value="8" />
                                </Trigger>
                                <Trigger Property="WindowState" Value="Normal">
                                    <!--
                                    <Setter TargetName="border" Property="BorderThickness" Value="2 0 2 2" />
                                    -->
                                    <Setter TargetName="BorderTop" Property="Height" Value="0" />
                                    <Setter TargetName="BorderBottom" Property="Height" Value="2" />
                                    <Setter TargetName="BorderLeft" Property="Width" Value="2" />
                                    <Setter TargetName="BorderRight" Property="Width" Value="2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type TabControl}" TargetType="TabControl">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="24" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid  Grid.Column="0">
                                    <Grid.Background>
                                        <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                    </Grid.Background>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="48" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="32" />
                                        <RowDefinition Height="32" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Viewbox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Top">
                                        <Canvas Width="1024" Height="1024" Opacity="0.6">
                                            <Path Width="768" Height="512" Canvas.Left="128" Canvas.Top="352" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 768,576C 682.866,576 569.422,543.679 528,498.924L 528,864L 496,864L 496,498.924C 454.578,543.679 341.133,576 256,576C 149.961,576 128,525.856 128,464C 128,402.144 149.961,352 256,352C 362.038,352 512,402.144 512,464C 512,402.144 661.961,352 768,352C 874.039,352 896,402.144 896,464C 896,525.856 874.039,576 768,576 Z M 512,464L 511.993,464.75L 512.007,464.75C 512.002,464.5 512,464.25 512,464 Z "/>
                                        </Canvas>
                                    </Viewbox>

                                    <ScrollViewer
                                        x:Name="scrollViewer"
                                        Grid.Column="1" Grid.Row="1"
                                        CanContentScroll="True"
                                        IsDeferredScrollingEnabled="False"
                                        SnapsToDevicePixels="True"
                                        HorizontalScrollBarVisibility="Disabled"
                                        VerticalScrollBarVisibility="Hidden">
                                        <StackPanel Orientation="Vertical" IsItemsHost="True" />
                                        <i:Interaction.Triggers>
                                            <i:DataTrigger Binding="{Binding ScrollableHeight, ElementName=scrollViewer}" Value="0" Comparison="Equal">
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="leftButton" Value="Hidden" />
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="rightButton" Value="Hidden" />
                                            </i:DataTrigger>
                                            <i:DataTrigger Binding="{Binding ScrollableHeight, ElementName=scrollViewer}" Value="0" Comparison="NotEqual">
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="leftButton" Value="Visible" />
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="rightButton" Value="Visible" />
                                            </i:DataTrigger>
                                        </i:Interaction.Triggers>
                                    </ScrollViewer>
                                    <RepeatButton
                                        x:Name="leftButton"
                                        Grid.Column="1" Grid.Row="3"
                                        Style="{StaticResource MaterialRepeatButton}"
                                        Width="32" Height="32"
                                        Margin="2"
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Content="▲"
                                        CommandTarget="{Binding ElementName=scrollViewer}"
                                        Command="ScrollBar.LineUpCommand"
                                        Visibility="Hidden">
                                        <RepeatButton.Background>
                                            <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                        </RepeatButton.Background>
                                    </RepeatButton>
                                    <RepeatButton
                                        x:Name="rightButton"
                                        Grid.Column="1" Grid.Row="4"
                                        Style="{StaticResource MaterialRepeatButton}"
                                        Width="32" Height="32"
                                        Margin="2"
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Content="▼"
                                        CommandTarget="{Binding ElementName=scrollViewer}"
                                        Command="ScrollBar.LineDownCommand"
                                        Visibility="Hidden">
                                        <RepeatButton.Background>
                                            <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                        </RepeatButton.Background>
                                    </RepeatButton>
                                    <StackPanel Grid.Column="1" Grid.Row="6" Orientation="Vertical">
                                        <!-- デバッグ用 -->
                                        <Button
                                            Style="{StaticResource MaterialButton}"
                                            Width="32" Height="32"
                                            Padding="2"
                                            Content="GC"
                                            Visibility="Collapsed"
                                            Loaded="OnLoadedGC"
                                            Click="OnClickGC">
                                            <Button.Background>
                                                <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                            </Button.Background>
                                        </Button>

                                        <Button
                                            x:Name="bordButton"
                                            Style="{StaticResource MaterialButton}"
                                            Width="32" Height="32"
                                            Padding="2"
                                            Tag="{Binding DataContext,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}"
                                            Content="{StaticResource ButtonIconWindowBordList}">
                                            <Button.Background>
                                                <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                            </Button.Background>
                                            <Button.Resources>
                                                <ContextMenu
                                                    x:Key="ContextMenu"
                                                    ItemsSource="{Binding Tag.Boards.Value, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                                    Placement="Top"
                                                    VerticalOffset="4" HorizontalOffset="0"
                                                    Tag="{Binding PlacementTarget.Tag,Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                                    <ContextMenu.ItemContainerStyle>
                                                        <Style TargetType="MenuItem">
                                                            <Setter Property="Header" Value="{Binding Name}" />
                                                            <Setter Property="Command" Value="{Binding Tag.BoardOpenCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                                                            <Setter Property="CommandParameter" Value="{Binding}" />
                                                        </Style>
                                                    </ContextMenu.ItemContainerStyle>
                                                </ContextMenu>
                                            </Button.Resources>
                                            <Button.ToolTip>
                                                <ToolTip Content="板一覧" />
                                            </Button.ToolTip>

                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:ChangePropertyAction
                                                        TargetObject="{StaticResource ContextMenu}"
                                                        PropertyName="IsOpen"
                                                        Value="True"/>
                                                    <i:ChangePropertyAction
                                                        TargetObject="{StaticResource ContextMenu}" 
                                                        PropertyName="PlacementTarget" 
                                                        Value="{Binding ElementName=bordButton, Mode=OneWay}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button
                                            Style="{StaticResource MaterialButton}"
                                            Width="32" Height="32"
                                            Padding="2"
                                            Content="{StaticResource ButtonIconWindowConfig}">
                                            <Button.Background>
                                                <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                            </Button.Background>
                                            <Button.ToolTip>
                                                <ToolTip Content="設定" />
                                            </Button.ToolTip>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ri:EventToReactiveCommand Command="{Binding ConfigButtonClickCommand, Mode=OneWay}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <Border
                                    Name="ContentPanel" Grid.Column="1"
                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                    Background="{TemplateBinding Panel.Background}"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Grid>
                                        <ContentPresenter 
                                            ContentSource="SelectedContent"
                                            Content="{TemplateBinding TabControl.SelectedContent}"
                                            ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                                            ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}"
                                            Margin="{TemplateBinding Control.Padding}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="BorderThickness" Value="0 0 0 0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <!-- LightBlue 500 -->
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 2 0 0" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border 
                                x:Name="TabItemBorder"
                                CornerRadius="6,0,0,6"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                MinHeight="64"
                                MaxHeight="164"
                                VerticalAlignment="Bottom"
                                >
                                <Border.Resources>
                                    <Storyboard x:Key="TabHighlightStoryboard">
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            Storyboard.TargetName="White">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Border.Resources>
                                <Border.Height>
                                    <MultiBinding Converter="{StaticResource TabItemWidthConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="ItemsSource" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabControl}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}" />
                                            <!-- コンバータを動かすためにBindする -->
                                            <Binding Path="DataContext.CatalogToken.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:MainWindow}" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Border.Height>
                                <Grid>
                                    <Grid Background="Transparent" Margin="{TemplateBinding Padding}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ContentPresenter 
                                            Grid.Row="0"
                                            Margin="0 4 0 4"
                                            ContentSource="Header" 
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Stretch"
                                            ClipToBounds="True"/>
                                        <Button
                                            Grid.Row="1"
                                            Style="{StaticResource TabCloseButton}"
                                            Background="{Binding Background, Mode=OneWay, ElementName=TabItemBorder}"
                                            Visibility="Collapsed">
                                            <i:Interaction.Triggers>
                                                <i:DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}" Value="False">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}" Value="True">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </i:DataTrigger>
                                                <i:EventTrigger EventName="Click">
                                                    <ri:EventToReactiveCommand Command="{Binding DataContext.TabCloseClickButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </Grid>
                                    <Border
                                        x:Name="White"
                                        Background="White"
                                        CornerRadius="6,0,0,6"
                                        Opacity="0"
                                        IsHitTestVisible="False"
                                        />

                                    <i:Interaction.Triggers>
                                        <i:DataTrigger Value="True">
                                            <i:DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource TabItemHilightConverter}">
                                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                    <Binding Path="IsMouseOver" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                </MultiBinding>
                                            </i:DataTrigger.Binding>
                                            <i:ControlStoryboardAction Storyboard="{StaticResource TabHighlightStoryboard}" ControlStoryboardOption="Play" />
                                        </i:DataTrigger>
                                        <i:DataTrigger Value="False">
                                            <i:DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource TabItemHilightConverter}">
                                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                    <Binding Path="IsMouseOver" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                </MultiBinding>
                                            </i:DataTrigger.Binding>
                                            <i:ControlStoryboardAction Storyboard="{StaticResource TabHighlightStoryboard}" ControlStoryboardOption="Stop" />
                                        </i:DataTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.TabClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Setter Property="TextBlock.Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource WindowTabForegroundColor}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource WindowTabBackgroundColor}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="TextBlock.Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource WindowTabSelectedForegroundColor}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FutabaTabControl" TargetType="TabControl">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="24" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Grid 
                                    Grid.Row="0"
                                    Height="{StaticResource WindowCaptionHeight}"
                                    MinHeight="{x:Static SystemParameters.CaptionHeight}">
                                    <Grid.Background>
                                        <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                    </Grid.Background>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="8" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="32" />
                                        <ColumnDefinition Width="32" />
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ScrollViewer
                                        x:Name="scrollViewer" Grid.Column="1" CanContentScroll="True"
                                        IsDeferredScrollingEnabled="False" SnapsToDevicePixels="True"
                                        HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                        <StackPanel Orientation="Horizontal" IsItemsHost="True" />
                                        <i:Interaction.Triggers>
                                            <i:DataTrigger Binding="{Binding ScrollableWidth, ElementName=scrollViewer}" Value="0" Comparison="Equal">
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="leftButton" Value="Hidden" />
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="rightButton" Value="Hidden" />
                                            </i:DataTrigger>
                                            <i:DataTrigger Binding="{Binding ScrollableWidth, ElementName=scrollViewer}" Value="0" Comparison="NotEqual">
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="leftButton" Value="Visible" />
                                                <i:ChangePropertyAction PropertyName="Visibility" TargetName="rightButton" Value="Visible" />
                                            </i:DataTrigger>
                                        </i:Interaction.Triggers>
                                    </ScrollViewer>
                                    <RepeatButton
                                        x:Name="leftButton" Grid.Column="3"
                                        Style="{StaticResource MaterialRepeatButton}"
                                        Width="32" Height="32"
                                        Margin="2"
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Content="◀"
                                        CommandTarget="{Binding ElementName=scrollViewer}"
                                        Command="ScrollBar.LineLeftCommand"
                                        Visibility="Hidden"
                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                        <RepeatButton.Background>
                                            <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                        </RepeatButton.Background>
                                    </RepeatButton>
                                    <RepeatButton
                                        x:Name="rightButton" Grid.Column="4"
                                        Style="{StaticResource MaterialRepeatButton}"
                                        Width="32" Height="32"
                                        Margin="2"
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Content="▶"
                                        CommandTarget="{Binding ElementName=scrollViewer}"
                                        Command="ScrollBar.LineRightCommand"
                                        Visibility="Hidden"
                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                        <RepeatButton.Background>
                                            <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                        </RepeatButton.Background>
                                    </RepeatButton>
                                    <StackPanel Grid.Column="6" Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Button Content="0" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.MinimizeWindowCommand}" />
                                        <Button Content="1" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.MaximizeWindowCommand}">
                                            <i:Interaction.Triggers>
                                                <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="Equal">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="NotEqual">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                                </i:DataTrigger>
                                            </i:Interaction.Triggers>

                                        </Button>
                                        <Button Content="2" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.RestoreWindowCommand}">
                                            <i:Interaction.Triggers>
                                                <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="Equal">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="NotEqual">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </i:DataTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button Content="r" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.CloseWindowCommand}" />
                                    </StackPanel>
                                </Grid>

                                <Border
                                    Name="ContentPanel" Grid.Row="1"
                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                    Background="{TemplateBinding Panel.Background}"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Grid DataContext="{TemplateBinding TabControl.DataContext}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="360" MinWidth="360"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Grid.Column="0"
                                            Width="{Binding DataContext.Futaba.Value.FullScreenThreadContainerWidth.Value, RelativeSource={RelativeSource Self}}"
                                            BorderThickness="0"
                                            BorderBrush="Transparent"
                                            Padding="2"
                                            >
                                            <Border.Background>
                                                <SolidColorBrush Color="{DynamicResource WindowTabBackgroundColor}" />
                                            </Border.Background>
                                            <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                                                <TextBlock.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource WindowTabSelectedForegroundColor}" />
                                                </TextBlock.Foreground>
                                                <Button
                                                    Style="{StaticResource MaterialTransparentButton}"
                                                    Content="{DynamicResource ButtonIconCatalogExpand}"
                                                    DataContext="{Binding DataContext.Futaba.Value, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                                                    Width="32"
                                                    >
                                                    <Button.Background>
                                                        <SolidColorBrush Color="{DynamicResource WindowTabBackgroundColor}" />
                                                    </Button.Background>
                                                    <Button.ToolTip>
                                                        <ToolTip Content="スレッド画面最大化解除" />
                                                    </Button.ToolTip>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <ri:EventToReactiveCommand Command="{Binding FullScreenThreadClickCommand, Mode=OneWay}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button
                                                    Style="{StaticResource MaterialTransparentButton}"
                                                    Content="{DynamicResource ButtonIconViewerUpdate}"
                                                    DataContext="{Binding Contents.Futaba.Value, Mode=OneWay, ElementName=FutabaCatalogViewer}"
                                                    Width="32"
                                                    >
                                                    <Button.Background>
                                                        <SolidColorBrush Color="{DynamicResource WindowTabBackgroundColor}" />
                                                    </Button.Background>
                                                    <Button.ToolTip>
                                                        <ToolTip Content="更新" />
                                                    </Button.ToolTip>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <ri:EventToReactiveCommand Command="{Binding DataContext.CatalogUpdateClickCommand, Mode=OneWay, ElementName=FutabaCatalogViewer}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                            </StackPanel>
                                        </Border>

                                        <GridSplitter
                                            Grid.Column="2" Width="5"
                                            HorizontalAlignment="Stretch"
                                            Visibility="{Binding DataContext.Futaba.Value.FullScreenBorderVisibility.Value, RelativeSource={RelativeSource Self}}">
                                            <GridSplitter.Background>
                                                <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                                            </GridSplitter.Background>
                                        </GridSplitter>

                                        <control:FutabaCatalogViewer
                                            x:Name="FutabaCatalogViewer"
                                            Grid.Column="1" Grid.ColumnSpan="{Binding DataContext.Futaba.Value.FullScreenSpan.Value, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                                            Visibility="{Binding DataContext.Futaba.Value.FullScreenThreadCatalogVisibility.Value, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                                            Contents="{TemplateBinding TabControl.DataContext}" />

                                        <ContentPresenter
                                            Grid.Column="{Binding DataContext.Futaba.Value.FullScreenThreadColumn.Value, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                                            Grid.ColumnSpan="{Binding DataContext.Futaba.Value.FullScreenThreadColumnSpan.Value, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                                            Visibility="{Binding DataContext.Futaba.Value.FullScreenCatalogVisibility.Value, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                                            ContentSource="SelectedContent"
                                            Content="{TemplateBinding TabControl.SelectedContent}"
                                            ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                                            ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}"
                                            Margin="{TemplateBinding Control.Padding}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FutabaTabItem" TargetType="TabItem">
                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <!-- LightBlue 500 -->
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 4 0 0" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border 
                                x:Name="TabItemBorder"
                                CornerRadius="6,6,0,0"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                MinWidth="36"
                                MaxWidth="164"
                                Height="32"
                                VerticalAlignment="Bottom"
                                ClipToBounds="True"
                                >
                                <Border.Resources>
                                    <Storyboard x:Key="TabHighlightStoryboard">
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            Storyboard.TargetName="White">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Border.Resources>
                                <Border.Width>
                                    <MultiBinding Converter="{StaticResource TabItemWidthConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="ItemsSource" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabControl}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}" />
                                            <!-- コンバータを動かすためにBindする -->
                                            <Binding Path="DataContext.ThreadToken.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:MainWindow}" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Border.Width>
                                <Grid>
                                    <Grid Background="Transparent" Margin="{TemplateBinding Padding}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter 
                                            Grid.Column="0"
                                            ContentSource="Header" 
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            ClipToBounds="True"/>
                                        <Button
                                            Grid.Column="1"
                                            Style="{StaticResource TabCloseButton}"
                                            Background="{Binding Background, Mode=OneWay, ElementName=TabItemBorder}"
                                            Visibility="Collapsed">
                                            <i:Interaction.Triggers>
                                                <i:DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}" Value="False">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}" Value="True">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </i:DataTrigger>
                                                <i:EventTrigger EventName="Click">
                                                    <ri:EventToReactiveCommand Command="{Binding DataContext.TabCloseClickButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </Grid>
                                    <Border
                                        x:Name="White"
                                        Background="White"
                                        CornerRadius="6,6,0,0"
                                        Opacity="0"
                                        IsHitTestVisible="False"
                                        />

                                    <i:Interaction.Triggers>
                                        <i:DataTrigger Value="True">
                                            <i:DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource TabItemHilightConverter}">
                                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                    <Binding Path="IsMouseOver" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                </MultiBinding>
                                            </i:DataTrigger.Binding>
                                            <i:ControlStoryboardAction Storyboard="{StaticResource TabHighlightStoryboard}" ControlStoryboardOption="Play" />
                                        </i:DataTrigger>
                                        <i:DataTrigger Value="False">
                                            <i:DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource TabItemHilightConverter}">
                                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                    <Binding Path="IsMouseOver" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabItem}" />
                                                </MultiBinding>
                                            </i:DataTrigger.Binding>
                                            <i:ControlStoryboardAction Storyboard="{StaticResource TabHighlightStoryboard}" ControlStoryboardOption="Stop" />
                                        </i:DataTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.TabClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Setter Property="TextBlock.Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource WindowTabForegroundColor}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource WindowTabBackgroundColor}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="TextBlock.Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource WindowTabSelectedForegroundColor}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CaptionButtonStyleKey" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialButton}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource WindowFrameColor}" />
                    </Setter.Value>
                </Setter>
                <!--
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource WindowTabForegroundColor}" />
                    </Setter.Value>
                </Setter>
                -->
                <Setter Property="FontFamily" Value="Marlett"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="MinWidth" Value="{StaticResource WindowCaptionHeight}" />
                <!--
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" SnapsToDevicePixels="True">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource MakimokiBackgroundColor}" Opacity="0" />
                                </Border.Background>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Focusable="False"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                -->
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="SystemCommandsCanExecute" Executed="CommandBindingMinimizeWindowCommand" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="SystemCommandsCanExecute" Executed="CommandBindingRestoreWindowCommand" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="SystemCommandsCanExecute" Executed="CommandBindingMaximizeWindowCommand" />
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="SystemCommandsCanExecute" Executed="CommandBindingCloseWindowCommand" />
    </Window.CommandBindings>

    <Window.Content>
        <Grid UseLayoutRounding="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="36" />
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- DynamicResource取得用のElement -->
            <FrameworkElement 
                x:Name="WindowThreadTabDieOpacityGetter"
                Visibility="Collapsed"
                DataContext="{DynamicResource WindowThreadTabDieOpacity}" />
            <Grid x:Name="PopupContainer" />

            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                <Button
                    Style="{StaticResource CaptionButtonStyleKey}"
                    Content="0"
                    Command="{x:Static SystemCommands.MinimizeWindowCommand}" />
                <Button x:Name="maximizeWindowButton" Content="1" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.MaximizeWindowCommand}">
                    <i:Interaction.Triggers>
                        <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="Equal">
                            <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                        </i:DataTrigger>
                        <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="NotEqual">
                            <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                        </i:DataTrigger>
                    </i:Interaction.Triggers>

                </Button>
                <Button x:Name="restoreWindowButton" Content="2" Style="{StaticResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.RestoreWindowCommand}">
                    <i:Interaction.Triggers>
                        <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="Equal">
                            <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                        </i:DataTrigger>
                        <i:DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="Normal" Comparison="NotEqual">
                            <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                        </i:DataTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="r" Style="{StaticResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.CloseWindowCommand}" />
            </StackPanel>

            <!-- WPFバグ対策コンテナ -->
            <Grid
                x:Name="BitmapRemoveConainer"
                Grid.Row="1"
                Visibility="Hidden"
                />


            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                </Grid.ColumnDefinitions>
                <ListBox
                    Background="Transparent"
                    ItemsSource="{Binding Boards.Value, Mode=OneWay}"
                    BorderThickness="0"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.CanContentScroll="True"
                    VirtualizingPanel.ScrollUnit="Pixel"
                    VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.VirtualizationMode="Recycling">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <!--
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="ForestGreen"/>
                            <Setter Property="Foreground" Value="Gold"/>
                        </Trigger>
                    </Style.Triggers>
                    -->
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <vwp:VirtualizingWrapPanel IsItemsHost="True"  HorizontalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Button
                                    Background="White"
                                    Margin="4" 
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch">
                                    <Grid x:Name="CatalogItem">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Viewbox
                                            Grid.Column="0"
                                            Grid.Row="0"
                                            Width="{DynamicResource CatalogImageSize}" Height="{DynamicResource CatalogImageSize}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Stretch="Uniform"
                                            >
                                        </Viewbox>
                                        <Grid
                                            Grid.Column="0"
                                            Grid.Row="1"
                                            VerticalAlignment="Bottom"
                                            Width="{Binding ActualWidth, ElementName=CatalogItem, Mode=OneWay}"
                                            Height="{DynamicResource CatalogTextSize}"
                                            >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <emoji:TextBlock
                                                Grid.Column="2"
                                                IsHitTestVisible="False"
                                                ColorBlend="False"
                                                Text="{Binding Name, Mode=OneWay}"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"/>
                                        </Grid>
                                    </Grid>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseUp">
                                            <ri:EventToReactiveCommand Command="{Binding DataContext.BordListClickCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>


                <!--
            <ItemsControl ItemsSource="{Binding Bords.Value}" Background="AliceBlue" HorizontalAlignment="Center">
                <ItemsControl.Template>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <WrapPanel IsItemsHost="True" />
                    </ControlTemplate>
                </ItemsControl.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type data:BordConfig}">
                        <Grid Background="Aqua" Width="120" Height="120" Margin="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Name}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            -->
            </Grid>
            <TabControl
                x:Name="TabContainer"
                Grid.Row="0" Grid.RowSpan="2"
                Visibility="{Binding TabVisibility.Value, Mode=OneWay}"
                ItemsSource="{Binding Catalogs, Mode=OneWay}"
                SelectedItem="{Binding Path=TabControlSelectedItem.Value,UpdateSourceTrigger=PropertyChanged,Mode=Twoway}"
                TabStripPlacement="Left"
                Padding="0">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <Grid
                            Background="Transparent"
                            Tag="{Binding DataContext,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}">
                            <Grid.ContextMenu>
                                <ContextMenu Tag="{Binding PlacementTarget.Tag,Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                    <MenuItem
                                        Header="更新(_U)"
                                        Command="{Binding Tag.ThreadUpdateCommand,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                    <Separator />
                                    <MenuItem
                                        Header="閉じる(_C)"
                                        Command="{Binding Tag.ThreadCloseCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                    <MenuItem
                                        Header="他のタブをすべて閉じる"
                                        Command="{Binding Tag.ThreadCloseOtherCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                    <MenuItem
                                        Header="下のタブを閉じる"
                                        Command="{Binding Tag.ThreadCloseRightCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding Futaba.Value,Mode=OneWay}">
                                        <MenuItem.IsEnabled>
                                            <MultiBinding Converter="{StaticResource TabLastMenuItemConverter}" Mode="OneWay">
                                                <MultiBinding.Bindings>
                                                    <Binding Path="Value" Source="{x:Static util:Futaba.Catalog}" Mode="OneWay" />
                                                    <Binding Path="Futaba.Value" Mode="OneWay" />
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </MenuItem.IsEnabled>
                                    </MenuItem>
                                </ContextMenu>
                            </Grid.ContextMenu>

                            <emoji:TextBlock
                                Grid.Column="1"
                                ColorBlend="False"
                                IsHitTestVisible="False"
                                Text="{Binding Name.Value, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap"
                                VerticalAlignment="Stretch"
                                Margin="4 0 4 0">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </emoji:TextBlock>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <TabControl
                            x:Name="container"
                            Style="{StaticResource FutabaTabControl}"
                            ItemContainerStyle="{StaticResource FutabaTabItem}"
                            ItemsSource="{Binding DataContext.Threads.Value, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}"
                            SelectedItem="{Binding DataContext.ThreadTabSelectedItem.Value, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}, UpdateSourceTrigger=PropertyChanged,Mode=Twoway}"
                            Padding="0">
                            <TabControl.Background>
                                <SolidColorBrush Color="{DynamicResource ViewerBackgroundColor}" />
                            </TabControl.Background>

                            <TabControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid
                                        Background="Transparent"
                                        Tag="{Binding DataContext,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}">
                                        <Grid.Opacity>
                                            <MultiBinding Converter="{StaticResource ThreadDieOpacityConverter}" Mode="OneWay">
                                                <MultiBinding.Bindings>
                                                    <Binding Path="Futaba.Value" />
                                                    <Binding Path="DataContext" ElementName="WindowThreadTabDieOpacityGetter" />
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </Grid.Opacity>
                                        <Grid.ContextMenu>
                                            <ContextMenu Tag="{Binding PlacementTarget.Tag,Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                                <MenuItem
                                                    Header="更新(_U)"
                                                    Command="{Binding Tag.ThreadUpdateCommand,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                                <Separator />
                                                <MenuItem
                                                    Header="閉じる(_C)"
                                                    Command="{Binding Tag.ThreadCloseCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                                <MenuItem
                                                    Header="全てのタブを閉じる"
                                                    Command="{Binding Tag.ThreadCloseAllCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                                <MenuItem
                                                    Header="他のタブをすべて閉じる"
                                                    Command="{Binding Tag.ThreadCloseOtherCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                                <MenuItem
                                                    Header="落ちたタブを閉じる"
                                                    Command="{Binding Tag.ThreadCloseDieCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding Futaba.Value,Mode=OneWay}"/>
                                                <MenuItem
                                                    Header="右のタブを閉じる"
                                                    Command="{Binding Tag.ThreadCloseRightCommand,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding Futaba.Value,Mode=OneWay}">
                                                    <MenuItem.IsEnabled>
                                                        <MultiBinding Converter="{StaticResource TabLastMenuItemConverter}" Mode="OneWay">
                                                            <MultiBinding.Bindings>
                                                                <Binding Path="Value" Source="{x:Static util:Futaba.Threads}" Mode="OneWay" />
                                                                <Binding Path="Futaba.Value" Mode="OneWay" />
                                                            </MultiBinding.Bindings>
                                                        </MultiBinding>
                                                    </MenuItem.IsEnabled>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Grid.ContextMenu>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Viewbox
                                            Grid.Column="0"
                                            Width="24" Height="24" 
                                            StretchDirection="DownOnly"
                                            Visibility="{Binding ThumbVisibility.Value, Mode=OneWay}">
                                            <Image 
                                                Source="{Binding ThumbSource.Value, Mode=OneWay}"
                                                RenderOptions.EdgeMode="Aliased"
                                                RenderOptions.BitmapScalingMode="Fant">
                                                <Image.CacheMode>
                                                    <BitmapCache RenderAtScale="1" />
                                                </Image.CacheMode>
                                            </Image>
                                        </Viewbox>
                                        <Ellipse
                                            Width="10" Height="10" Margin="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top">
                                            <Ellipse.Visibility>
                                                <!-- カタログからの変更通知なので生のプロパティ参照しないと更新が来ない -->
                                                <MultiBinding Converter="{StaticResource ThreadNewResVisibleConverter}" Mode="OneWay">
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="Futaba.Value.ResCount.Value" />
                                                        <Binding Path="Futaba.Value.CatalogResCount.Value" />
                                                        <Binding Path="LastRescount.Value" />
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </Ellipse.Visibility>
                                            <Ellipse.Fill>
                                                <SolidColorBrush Color="{DynamicResource WindowThreadTabNewColor}" />
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <emoji:TextBlock
                                            Grid.Column="1"
                                            ColorBlend="False"
                                            IsHitTestVisible="False"
                                            Text="{Binding Name.Value, Mode=OneWay}"
                                            VerticalAlignment="Center" Margin="4 0 4 0" />
                                    </Grid>
                                </DataTemplate>
                            </TabControl.ItemTemplate>

                            <TabControl.ContentTemplate>
                                <DataTemplate>
                                    <Grid x:Name="container">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <Viewbox
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="48"
                                            Opacity="{DynamicResource FailsafeThreadImageOpacity}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Visibility="{Binding FailsafeMistakePostVisibility.Value, Mode=OneWay}">
                                            <Image
                                                Source="{Binding ThumbSource.Value, Mode=OneWay}"
                                                RenderOptions.EdgeMode="Aliased"
                                                RenderOptions.BitmapScalingMode="Fant">
                                                <Image.CacheMode>
                                                    <BitmapCache RenderAtScale="1" />
                                                </Image.CacheMode>
                                                <Image.Effect>
                                                    <BlurEffect Radius="{DynamicResource FailsafeThreadImageBlurRadius}" />
                                                </Image.Effect>
                                            </Image>
                                        </Viewbox>

                                        <control:FutabaThreadRegionContainer
                                            Grid.Column="0" Grid.ColumnSpan="2"
                                            Grid.Row="0" Grid.RowSpan="2"
                                            Contents="{Binding DataContext, Mode=OneWay, ElementName=container}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="ContentsChanged">
                                                    <ri:EventToReactiveCommand Command="{Binding ContentsChangedCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </control:FutabaThreadRegionContainer>
                                    </Grid>
                                </DataTemplate>
                            </TabControl.ContentTemplate>
                        </TabControl>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>

            <ListBox
                Grid.Row="1"
                ItemsSource="{Binding Infomations.Value, Mode=OneWay}"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                IsHitTestVisible="False"
                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                ScrollViewer.CanContentScroll="False">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel
                            Orientation="Vertical"
                            IsItemsHost="True" 
                            UseLayoutRounding="False"
                            HorizontalAlignment="Stretch"
                            />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Padding="8 0 8 8" IsHitTestVisible="False">
                            <Grid MinWidth="{DynamicResource InformationMinWidth}" MinHeight="{DynamicResource InformationMinHeight}">
                                <Grid.Background>
                                    <SolidColorBrush Color="{DynamicResource InformationBackpoundColor}" />
                                </Grid.Background>
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource InformationForegroundColor}" />
                                </TextBlock.Foreground>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="4" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.RowSpan="3" Grid.Column="0">
                                    <Grid Visibility="{Binding ExObject.ObjectVisibility.Value, Mode=OneWay}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="1" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="1" />
                                        </Grid.RowDefinitions>
                                        <Viewbox
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Width="{DynamicResource InformationImageSize}" Height="{DynamicResource InformationImageSize}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Stretch="Uniform"
                                            >
                                            <Image
                                                Source="{Binding ExObject.ThumbSource.Value, Mode=OneWay}"
                                                RenderOptions.EdgeMode="Aliased"
                                                RenderOptions.BitmapScalingMode="Fant"
                                                Unloaded="OnImageUnloaded">
                                                <Image.CacheMode>
                                                    <BitmapCache RenderAtScale="1" />
                                                </Image.CacheMode>
                                            </Image>
                                        </Viewbox>
                                    </Grid>
                                </Border>
                                <Border Grid.Column="2" Padding="0 1 0 1">
                                    <emoji:TextBlock 
                                        ColorBlend="False"
                                        Text="{Binding Message, Mode=OneWay}"
                                        TextWrapping="Wrap"
                                        FontFamily="{DynamicResource InformationFont}"
                                        FontSize="{DynamicResource InformationFontSize}" />
                                </Border>
                            </Grid>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <ri:EventToReactiveCommand Command="{Binding ExObject.LoadedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Window.Content>
</Window>
